

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jul 26 10:18:12 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40  0000                     
    41                           ; Version 2.32
    42                           ; Generated 02/02/2021 GMT
    43                           ; 
    44                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4520 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataBANK0
    78  001304                     __pidataBANK0:
    79                           	callstack 0
    80                           
    81                           ;initializer for Tela2@F82
    82  001304  46                 	db	70
    83  001305  72                 	db	114
    84  001306  61                 	db	97
    85  001307  63                 	db	99
    86  001308  6F                 	db	111
    87  001309  20                 	db	32
    88  00130A  28                 	db	40
    89  00130B  36                 	db	54
    90  00130C  29                 	db	41
    91  00130D  00                 	db	0
    92                           
    93                           ;initializer for Tela2@F80
    94  00130E  4D                 	db	77
    95  00130F  65                 	db	101
    96  001310  64                 	db	100
    97  001311  69                 	db	105
    98  001312  6F                 	db	111
    99  001313  20                 	db	32
   100  001314  28                 	db	40
   101  001315  35                 	db	53
   102  001316  29                 	db	41
   103  001317  00                 	db	0
   104                           
   105                           ;initializer for Tela2@F78
   106  001318  46                 	db	70
   107  001319  6F                 	db	111
   108  00131A  72                 	db	114
   109  00131B  74                 	db	116
   110  00131C  65                 	db	101
   111  00131D  20                 	db	32
   112  00131E  28                 	db	40
   113  00131F  34                 	db	52
   114  001320  29                 	db	41
   115  001321  00                 	db	0
   116                           
   117                           ;initializer for Tela1@F76
   118  001322  43                 	db	67
   119  001323  61                 	db	97
   120  001324  66                 	db	102
   121  001325  65                 	db	101
   122  001326  20                 	db	32
   123  001327  28                 	db	40
   124  001328  31                 	db	49
   125  001329  29                 	db	41
   126  00132A  00                 	db	0
   127                           
   128                           ;initializer for main@F78
   129  00132B  28                 	db	40
   130  00132C  30                 	db	48
   131  00132D  29                 	db	41
   132                           
   133                           	psect	idataBANK1
   134  001020                     __pidataBANK1:
   135                           	callstack 0
   136                           
   137                           ;initializer for Tela3@F96
   138  001020  01                 	db	1
   139  001021  03                 	db	3
   140  001022  03                 	db	3
   141  001023  07                 	db	7
   142  001024  07                 	db	7
   143  001025  0F                 	db	15
   144  001026  0F                 	db	15
   145  001027  1F                 	db	31
   146  001028  10                 	db	16
   147  001029  18                 	db	24
   148  00102A  18                 	db	24
   149  00102B  1C                 	db	28
   150  00102C  1C                 	db	28
   151  00102D  1E                 	db	30
   152  00102E  1E                 	db	30
   153  00102F  1F                 	db	31
   154  001030  0F                 	db	15
   155  001031  0F                 	db	15
   156  001032  07                 	db	7
   157  001033  03                 	db	3
   158  001034  00                 	db	0
   159  001035  00                 	db	0
   160  001036  00                 	db	0
   161  001037  00                 	db	0
   162  001038  1E                 	db	30
   163  001039  1E                 	db	30
   164  00103A  1C                 	db	28
   165  00103B  18                 	db	24
   166  00103C  00                 	db	0
   167  00103D  00                 	db	0
   168  00103E  00                 	db	0
   169  00103F  00                 	db	0
   170                           
   171                           ;initializer for main@F82
   172  001040  01                 	db	1
   173  001041  03                 	db	3
   174  001042  03                 	db	3
   175  001043  07                 	db	7
   176  001044  07                 	db	7
   177  001045  0F                 	db	15
   178  001046  0F                 	db	15
   179  001047  1F                 	db	31
   180  001048  10                 	db	16
   181  001049  18                 	db	24
   182  00104A  18                 	db	24
   183  00104B  1C                 	db	28
   184  00104C  1C                 	db	28
   185  00104D  1E                 	db	30
   186  00104E  1E                 	db	30
   187  00104F  1F                 	db	31
   188  001050  0F                 	db	15
   189  001051  0F                 	db	15
   190  001052  07                 	db	7
   191  001053  03                 	db	3
   192  001054  00                 	db	0
   193  001055  00                 	db	0
   194  001056  00                 	db	0
   195  001057  00                 	db	0
   196  001058  1E                 	db	30
   197  001059  1E                 	db	30
   198  00105A  1C                 	db	28
   199  00105B  18                 	db	24
   200  00105C  00                 	db	0
   201  00105D  00                 	db	0
   202  00105E  00                 	db	0
   203  00105F  00                 	db	0
   204                           
   205                           ;initializer for main@F76
   206  001060  4D                 	db	77
   207  001061  61                 	db	97
   208  001062  71                 	db	113
   209  001063  75                 	db	117
   210  001064  69                 	db	105
   211  001065  6E                 	db	110
   212  001066  61                 	db	97
   213  001067  20                 	db	32
   214  001068  64                 	db	100
   215  001069  65                 	db	101
   216  00106A  20                 	db	32
   217  00106B  43                 	db	67
   218  00106C  61                 	db	97
   219  00106D  66                 	db	102
   220  00106E  65                 	db	101
   221  00106F  00                 	db	0
   222                           
   223                           ;initializer for Tela3@F94
   224  001070  50                 	db	80
   225  001071  65                 	db	101
   226  001072  64                 	db	100
   227  001073  69                 	db	105
   228  001074  64                 	db	100
   229  001075  6F                 	db	111
   230  001076  20                 	db	32
   231  001077  50                 	db	80
   232  001078  72                 	db	114
   233  001079  6F                 	db	111
   234  00107A  6E                 	db	110
   235  00107B  74                 	db	116
   236  00107C  6F                 	db	111
   237  00107D  00                 	db	0
   238                           
   239                           ;initializer for Tela1@F78
   240  00107E  43                 	db	67
   241  00107F  61                 	db	97
   242  001080  70                 	db	112
   243  001081  75                 	db	117
   244  001082  63                 	db	99
   245  001083  63                 	db	99
   246  001084  69                 	db	105
   247  001085  6E                 	db	110
   248  001086  6F                 	db	111
   249  001087  20                 	db	32
   250  001088  28                 	db	40
   251  001089  32                 	db	50
   252  00108A  29                 	db	41
   253  00108B  00                 	db	0
   254                           
   255                           ;initializer for Tela3@F92
   256  00108C  46                 	db	70
   257  00108D  61                 	db	97
   258  00108E  7A                 	db	122
   259  00108F  65                 	db	101
   260  001090  6E                 	db	110
   261  001091  64                 	db	100
   262  001092  6F                 	db	111
   263  001093  2E                 	db	46
   264  001094  2E                 	db	46
   265  001095  2E                 	db	46
   266  001096  00                 	db	0
   267                           
   268                           	psect	smallconst
   269  000600                     __psmallconst:
   270                           	callstack 0
   271  000600  00                 	db	0
   272  000601                     _valor@ssd$F163:
   273                           	callstack 0
   274  000601  3F                 	db	63
   275  000602  06                 	db	6
   276  000603  5B                 	db	91
   277  000604  4F                 	db	79
   278  000605  66                 	db	102
   279  000606  6D                 	db	109
   280  000607  7D                 	db	125
   281  000608  07                 	db	7
   282  000609  7F                 	db	127
   283  00060A  6F                 	db	111
   284  00060B  77                 	db	119
   285  00060C  7C                 	db	124
   286  00060D  39                 	db	57
   287  00060E  5E                 	db	94
   288  00060F  79                 	db	121
   289  000610  71                 	db	113
   290  000611                     __end_of_valor@ssd$F163:
   291                           	callstack 0
   292  0000                     _TRISE	set	3990
   293  0000                     _TRISD	set	3989
   294  0000                     _TRISC	set	3988
   295  0000                     _TRISB	set	3987
   296  0000                     _TRISA	set	3986
   297  0000                     _PORTE	set	3972
   298  0000                     _PORTD	set	3971
   299  0000                     _PORTC	set	3970
   300  0000                     _PORTB	set	3969
   301  0000                     _PORTA	set	3968
   302  000611  00                 	db	0	; dummy byte at the end
   303  0000                     
   304                           ; #config settings
   305                           
   306                           	psect	cinit
   307  00116C                     __pcinit:
   308                           	callstack 0
   309  00116C                     start_initialization:
   310                           	callstack 0
   311  00116C                     __initialization:
   312                           	callstack 0
   313                           
   314                           ; Initialize objects allocated to BANK1 (119 bytes)
   315                           ; load TBLPTR registers with __pidataBANK1
   316  00116C  0E20               	movlw	low __pidataBANK1
   317  00116E  6EF6               	movwf	tblptrl,c
   318  001170  0E10               	movlw	high __pidataBANK1
   319  001172  6EF7               	movwf	tblptrh,c
   320  001174  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   321  001176  6EF8               	movwf	tblptru,c
   322  001178  EE01  F000         	lfsr	0,__pdataBANK1
   323  00117C  EE10 F077          	lfsr	1,119
   324  001180                     copy_data0:
   325  001180  0009               	tblrd		*+
   326  001182  CFF5 FFEE          	movff	tablat,postinc0
   327  001186  50E5               	movf	postdec1,w,c
   328  001188  50E1               	movf	fsr1l,w,c
   329  00118A  E1FA               	bnz	copy_data0
   330                           
   331                           ; Initialize objects allocated to BANK0 (42 bytes)
   332                           ; load TBLPTR registers with __pidataBANK0
   333  00118C  0E04               	movlw	low __pidataBANK0
   334  00118E  6EF6               	movwf	tblptrl,c
   335  001190  0E13               	movlw	high __pidataBANK0
   336  001192  6EF7               	movwf	tblptrh,c
   337  001194  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   338  001196  6EF8               	movwf	tblptru,c
   339  001198  EE00  F0CF         	lfsr	0,__pdataBANK0
   340  00119C  EE10 F02A          	lfsr	1,42
   341  0011A0                     copy_data1:
   342  0011A0  0009               	tblrd		*+
   343  0011A2  CFF5 FFEE          	movff	tablat,postinc0
   344  0011A6  50E5               	movf	postdec1,w,c
   345  0011A8  50E1               	movf	fsr1l,w,c
   346  0011AA  E1FA               	bnz	copy_data1
   347                           
   348                           ; Clear objects allocated to COMRAM (12 bytes)
   349  0011AC  EE00  F06E         	lfsr	0,__pbssCOMRAM
   350  0011B0  0E0C               	movlw	12
   351  0011B2                     clear_0:
   352  0011B2  6AEE               	clrf	postinc0,c
   353  0011B4  06E8               	decf	wreg,f,c
   354  0011B6  E1FD               	bnz	clear_0
   355  0011B8                     end_of_initialization:
   356                           	callstack 0
   357  0011B8                     __end_of__initialization:
   358                           	callstack 0
   359  0011B8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   360  0011BA  6EF8               	movwf	tblptru,c
   361  0011BC  0100               	movlb	0
   362  0011BE  EFD8  F005         	goto	_main	;jump to C main() function
   363                           
   364                           	psect	bssCOMRAM
   365  00006E                     __pbssCOMRAM:
   366                           	callstack 0
   367  00006E                     kpDebounce@valorAntigo:
   368                           	callstack 0
   369  00006E                     	ds	2
   370  000070                     kpDebounce@valorNovo:
   371                           	callstack 0
   372  000070                     	ds	2
   373  000072                     _valor:
   374                           	callstack 0
   375  000072                     	ds	2
   376  000074                     _v3:
   377                           	callstack 0
   378  000074                     	ds	1
   379  000075                     _v2:
   380                           	callstack 0
   381  000075                     	ds	1
   382  000076                     _v1:
   383                           	callstack 0
   384  000076                     	ds	1
   385  000077                     _v0:
   386                           	callstack 0
   387  000077                     	ds	1
   388  000078                     _display:
   389                           	callstack 0
   390  000078                     	ds	1
   391  000079                     kpDebounce@tempo:
   392                           	callstack 0
   393  000079                     	ds	1
   394                           
   395                           	psect	dataBANK0
   396  0000CF                     __pdataBANK0:
   397                           	callstack 0
   398  0000CF                     Tela2@F82:
   399                           	callstack 0
   400  0000CF                     	ds	10
   401  0000D9                     Tela2@F80:
   402                           	callstack 0
   403  0000D9                     	ds	10
   404  0000E3                     Tela2@F78:
   405                           	callstack 0
   406  0000E3                     	ds	10
   407  0000ED                     Tela1@F76:
   408                           	callstack 0
   409  0000ED                     	ds	9
   410  0000F6                     main@F78:
   411                           	callstack 0
   412  0000F6                     	ds	3
   413                           
   414                           	psect	dataBANK1
   415  000100                     __pdataBANK1:
   416                           	callstack 0
   417  000100                     Tela3@F96:
   418                           	callstack 0
   419  000100                     	ds	32
   420  000120                     main@F82:
   421                           	callstack 0
   422  000120                     	ds	32
   423  000140                     main@F76:
   424                           	callstack 0
   425  000140                     	ds	16
   426  000150                     Tela3@F94:
   427                           	callstack 0
   428  000150                     	ds	14
   429  00015E                     Tela1@F78:
   430                           	callstack 0
   431  00015E                     	ds	14
   432  00016C                     Tela3@F92:
   433                           	callstack 0
   434  00016C                     	ds	11
   435                           
   436                           	psect	cstackBANK0
   437  000080                     __pcstackBANK0:
   438                           	callstack 0
   439  000080                     Tela1@msg2:
   440                           	callstack 0
   441                           
   442                           ; 14 bytes @ 0x0
   443  000080                     	ds	14
   444  00008E                     Tela1@msg1:
   445                           	callstack 0
   446                           
   447                           ; 9 bytes @ 0xE
   448  00008E                     	ds	9
   449  000097                     Tela1@tecla:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x17
   453  000097                     	ds	1
   454  000098                     Tela1@i:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x18
   458  000098                     	ds	1
   459  000099                     main@logo1:
   460                           	callstack 0
   461                           
   462                           ; 32 bytes @ 0x19
   463  000099                     	ds	32
   464  0000B9                     main@msg1:
   465                           	callstack 0
   466                           
   467                           ; 16 bytes @ 0x39
   468  0000B9                     	ds	16
   469  0000C9                     main@msg2:
   470                           	callstack 0
   471                           
   472                           ; 3 bytes @ 0x49
   473  0000C9                     	ds	3
   474  0000CC                     main@tecla:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x4C
   478  0000CC                     	ds	1
   479  0000CD                     main@time:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x4D
   483  0000CD                     	ds	1
   484  0000CE                     main@i:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x4E
   488  0000CE                     	ds	1
   489                           
   490                           	psect	cstackCOMRAM
   491  000001                     __pcstackCOMRAM:
   492                           	callstack 0
   493  000001                     ??_kpDebounce:
   494  000001                     ?_kpRead:
   495                           	callstack 0
   496  000001                     ?___wmul:
   497                           	callstack 0
   498  000001                     ?___lwdiv:
   499                           	callstack 0
   500  000001                     Delay40us@i:
   501                           	callstack 0
   502  000001                     ssdDigit@pos:
   503                           	callstack 0
   504  000001                     digitalWrite@pin:
   505                           	callstack 0
   506  000001                     pinMode@pin:
   507                           	callstack 0
   508  000001                     ___wmul@multiplier:
   509                           	callstack 0
   510  000001                     ___lwdiv@dividend:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x0
   514  000001                     	ds	1
   515  000002                     Delay2ms@i:
   516                           	callstack 0
   517  000002                     ssdDigit@val:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x1
   521  000002                     	ds	1
   522  000003                     digitalWrite@value:
   523                           	callstack 0
   524  000003                     pinMode@type:
   525                           	callstack 0
   526  000003                     ___wmul@multiplicand:
   527                           	callstack 0
   528  000003                     ___lwdiv@divisor:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x2
   532  000003                     	ds	2
   533  000005                     ??_digitalWrite:
   534  000005                     ??_pinMode:
   535  000005                     ___wmul@product:
   536                           	callstack 0
   537  000005                     ___lwdiv@quotient:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x4
   541  000005                     	ds	1
   542  000006                     kpDebounce@old_D:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x5
   546  000006                     	ds	1
   547  000007                     ??_ssdUpdate:
   548  000007                     lcdCommand@old_D:
   549                           	callstack 0
   550  000007                     lcdData@valor:
   551                           	callstack 0
   552  000007                     ___lwdiv@counter:
   553                           	callstack 0
   554  000007                     kpDebounce@k:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x6
   558  000007                     	ds	1
   559  000008                     ??_pwmSet1:
   560  000008                     lcdCommand@cmd:
   561                           	callstack 0
   562  000008                     lcdData@old_D:
   563                           	callstack 0
   564  000008                     tempo@v:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x7
   568  000008                     	ds	1
   569  000009                     kpDebounce@j:
   570                           	callstack 0
   571  000009                     tempo@l:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x8
   575  000009                     	ds	1
   576  00000A                     kpDebounce@i:
   577                           	callstack 0
   578  00000A                     pwmSet1@porcento:
   579                           	callstack 0
   580  00000A                     tempo@j:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x9
   584  00000A                     	ds	1
   585  00000B                     tempo@k:
   586                           	callstack 0
   587  00000B                     pwmSet1@val:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0xA
   591  00000B                     	ds	1
   592  00000C                     tempo@i:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0xB
   596  00000C                     	ds	1
   597  00000D                     Tela3@logo1:
   598                           	callstack 0
   599                           
   600                           ; 32 bytes @ 0xC
   601  00000D                     	ds	32
   602  00002D                     Tela3@msg2:
   603                           	callstack 0
   604                           
   605                           ; 14 bytes @ 0x2C
   606  00002D                     	ds	14
   607  00003B                     Tela3@msg1:
   608                           	callstack 0
   609                           
   610                           ; 11 bytes @ 0x3A
   611  00003B                     	ds	11
   612  000046                     Tela3@i:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0x45
   616  000046                     	ds	1
   617  000047                     ??_Tela2:
   618                           
   619                           ; 1 bytes @ 0x46
   620  000047                     	ds	2
   621  000049                     Tela2@msg1:
   622                           	callstack 0
   623                           
   624                           ; 10 bytes @ 0x48
   625  000049                     	ds	10
   626  000053                     Tela2@msg2:
   627                           	callstack 0
   628                           
   629                           ; 10 bytes @ 0x52
   630  000053                     	ds	10
   631  00005D                     Tela2@msg3:
   632                           	callstack 0
   633                           
   634                           ; 10 bytes @ 0x5C
   635  00005D                     	ds	10
   636  000067                     Tela2@tecla:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x66
   640  000067                     	ds	1
   641  000068                     Tela2@time:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x67
   645  000068                     	ds	1
   646  000069                     Tela2@i:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x68
   650  000069                     	ds	1
   651  00006A                     ??_Tela1:
   652                           
   653                           ; 1 bytes @ 0x69
   654  00006A                     	ds	2
   655  00006C                     ??_main:
   656                           
   657                           ; 1 bytes @ 0x6B
   658  00006C                     	ds	2
   659                           
   660 ;;
   661 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   662 ;;
   663 ;; *************** function _main *****************
   664 ;; Defined at:
   665 ;;		line 11 in file "main.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  logo1          32   25[BANK0 ] unsigned char [32]
   670 ;;  msg1           16   57[BANK0 ] unsigned char [16]
   671 ;;  msg2            3   73[BANK0 ] unsigned char [3]
   672 ;;  i               1   78[BANK0 ] unsigned char 
   673 ;;  time            1   77[BANK0 ] unsigned char 
   674 ;;  tecla           1   76[BANK0 ] unsigned char 
   675 ;;  j               1    0        unsigned char 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   685 ;;      Params:         0       0       0       0       0       0       0
   686 ;;      Locals:         0      54       0       0       0       0       0
   687 ;;      Temps:          2       0       0       0       0       0       0
   688 ;;      Totals:         2      54       0       0       0       0       0
   689 ;;Total ram usage:       56 bytes
   690 ;; Hardware stack levels required when called: 6
   691 ;; This function calls:
   692 ;;		_Tela1
   693 ;;		_kpDebounce
   694 ;;		_kpInit
   695 ;;		_kpRead
   696 ;;		_lcdCommand
   697 ;;		_lcdData
   698 ;;		_lcdInit
   699 ;;		_ssdDigit
   700 ;;		_ssdInit
   701 ;; This function is called by:
   702 ;;		Startup code after reset
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text0
   707  000BB0                     __ptext0:
   708                           	callstack 0
   709  000BB0                     _main:
   710                           	callstack 25
   711                           
   712                           ;main.c: 13: char i, j;;main.c: 14: char msg1[16] = "Maquina de Cafe";
   713                           
   714                           ;incstack = 0
   715  000BB0  EE21  F040         	lfsr	2,main@F76
   716  000BB4  EE10  F0B9         	lfsr	1,main@msg1
   717  000BB8  0E0F               	movlw	15
   718  000BBA                     u1951:
   719  000BBA  CFDB FFE3          	movff	plusw2,plusw1
   720  000BBE  06E8               	decf	wreg,f,c
   721  000BC0  E2FC               	bc	u1951
   722                           
   723                           ;main.c: 15: char msg2[3] = "(0)";
   724  000BC2  C0F6  F0C9         	movff	main@F78,main@msg2
   725  000BC6  C0F7  F0CA         	movff	main@F78+1,main@msg2+1
   726  000BCA  C0F8  F0CB         	movff	main@F78+2,main@msg2+2
   727                           
   728                           ;main.c: 16: char time;;main.c: 17: unsigned char tecla;;main.c: 18: lcdInit();
   729  000BCE  ECD4  F007         	call	_lcdInit	;wreg free
   730                           
   731                           ;main.c: 19: lcdCommand(0X80);
   732  000BD2  0E80               	movlw	128
   733  000BD4  EC82  F008         	call	_lcdCommand
   734                           
   735                           ;main.c: 20: for (i = 0; i < 15; i++) {
   736  000BD8  0E00               	movlw	0
   737  000BDA  0100               	movlb	0	; () banked
   738  000BDC  6FCE               	movwf	main@i& (0+255),b
   739  000BDE                     l2320:
   740                           
   741                           ; BSR set to: 0
   742                           ;main.c: 21: lcdData(msg1[i]);
   743  000BDE  51CE               	movf	main@i& (0+255),w,b
   744  000BE0  0FB9               	addlw	low main@msg1
   745  000BE2  6ED9               	movwf	fsr2l,c
   746  000BE4  6ADA               	clrf	fsr2h,c
   747  000BE6  50DF               	movf	indf2,w,c
   748  000BE8  EC0C  F009         	call	_lcdData
   749  000BEC  0100               	movlb	0	; () banked
   750  000BEE  2BCE               	incf	main@i& (0+255),f,b
   751                           
   752                           ; BSR set to: 0
   753  000BF0  0E0E               	movlw	14
   754  000BF2  65CE               	cpfsgt	main@i& (0+255),b
   755  000BF4  D7F4               	goto	l2320
   756                           
   757                           ; BSR set to: 0
   758                           ;main.c: 22: };main.c: 23: lcdCommand(0XC0);
   759  000BF6  0EC0               	movlw	192
   760  000BF8  EC82  F008         	call	_lcdCommand
   761                           
   762                           ;main.c: 24: for (i = 0; i < 4; i++) {
   763  000BFC  0E00               	movlw	0
   764  000BFE  0100               	movlb	0	; () banked
   765  000C00  6FCE               	movwf	main@i& (0+255),b
   766  000C02                     l2334:
   767                           
   768                           ; BSR set to: 0
   769                           ;main.c: 25: lcdData(msg2[i]);
   770  000C02  51CE               	movf	main@i& (0+255),w,b
   771  000C04  0FC9               	addlw	low main@msg2
   772  000C06  6ED9               	movwf	fsr2l,c
   773  000C08  6ADA               	clrf	fsr2h,c
   774  000C0A  50DF               	movf	indf2,w,c
   775  000C0C  EC0C  F009         	call	_lcdData
   776  000C10  0100               	movlb	0	; () banked
   777  000C12  2BCE               	incf	main@i& (0+255),f,b
   778                           
   779                           ; BSR set to: 0
   780  000C14  0E03               	movlw	3
   781  000C16  65CE               	cpfsgt	main@i& (0+255),b
   782  000C18  D7F4               	goto	l2334
   783                           
   784                           ; BSR set to: 0
   785                           ;main.c: 26: };main.c: 27: kpInit();
   786  000C1A  ECD9  F009         	call	_kpInit	;wreg free
   787                           
   788                           ;main.c: 28: ssdInit();
   789  000C1E  ECE1  F008         	call	_ssdInit	;wreg free
   790  000C22                     l2342:
   791                           
   792                           ;main.c: 30: kpDebounce();
   793  000C22  EC46  F005         	call	_kpDebounce	;wreg free
   794                           
   795                           ;main.c: 31: if (kpRead() != tecla) {
   796  000C26  0100               	movlb	0	; () banked
   797  000C28  51CC               	movf	main@tecla& (0+255),w,b
   798  000C2A  6E6C               	movwf	??_main^0,c
   799  000C2C  6A6D               	clrf	(??_main+1)^0,c
   800  000C2E  ECDE  F009         	call	_kpRead	;wreg free
   801  000C32  506C               	movf	??_main^0,w,c
   802  000C34  1801               	xorwf	?_kpRead^0,w,c
   803  000C36  E104               	bnz	u1980
   804  000C38  506D               	movf	(??_main+1)^0,w,c
   805  000C3A  1802               	xorwf	(?_kpRead+1)^0,w,c
   806  000C3C  B4D8               	btfsc	status,2,c
   807  000C3E  D013               	goto	l2354
   808  000C40                     u1980:
   809                           
   810                           ;main.c: 32: tecla = kpRead();
   811  000C40  ECDE  F009         	call	_kpRead	;wreg free
   812  000C44  5001               	movf	?_kpRead^0,w,c
   813  000C46  0100               	movlb	0	; () banked
   814  000C48  6FCC               	movwf	main@tecla& (0+255),b
   815                           
   816                           ; BSR set to: 0
   817                           ;main.c: 33: if (((kpRead()) & (1<<(4)))) {
   818  000C4A  ECDE  F009         	call	_kpRead	;wreg free
   819  000C4E  A801               	btfss	?_kpRead^0,4,c
   820  000C50  D00A               	goto	l2354
   821                           
   822                           ;main.c: 34: ssdDigit(0, 3);
   823  000C52  0E03               	movlw	3
   824  000C54  6E01               	movwf	ssdDigit@pos^0,c
   825  000C56  0E00               	movlw	0
   826  000C58  EC97  F009         	call	_ssdDigit
   827                           
   828                           ;main.c: 35: lcdCommand(0x01);
   829  000C5C  0E01               	movlw	1
   830  000C5E  EC82  F008         	call	_lcdCommand
   831                           
   832                           ;main.c: 36: Tela1();
   833  000C62  EC6B  F007         	call	_Tela1	;wreg free
   834  000C66                     l2354:
   835                           
   836                           ;main.c: 37: };main.c: 38: };main.c: 39: for (time = 0; time < 100; time++);
   837  000C66  0E00               	movlw	0
   838  000C68  0100               	movlb	0	; () banked
   839  000C6A  6FCD               	movwf	main@time& (0+255),b
   840  000C6C                     l2360:
   841                           
   842                           ; BSR set to: 0
   843  000C6C  2BCD               	incf	main@time& (0+255),f,b
   844                           
   845                           ; BSR set to: 0
   846  000C6E  0E63               	movlw	99
   847  000C70  65CD               	cpfsgt	main@time& (0+255),b
   848  000C72  D7FC               	goto	l2360
   849                           
   850                           ; BSR set to: 0
   851                           ;main.c: 40: lcdCommand(0x40);
   852  000C74  0E40               	movlw	64
   853  000C76  EC82  F008         	call	_lcdCommand
   854                           
   855                           ;main.c: 41: char logo1[32] = {;main.c: 42: 0x01, 0x03, 0x03, 0x07, 0x07, 0x0F, 0x0F, 0x
      +                          1F,;main.c: 43: 0x10, 0x18, 0x18, 0x1C, 0x1C, 0x1E, 0x1E, 0x1F,;main.c: 44: 0x0F, 0x0F, 
      +                          0x07, 0x03, 0x00, 0x00, 0x00, 0x00,;main.c: 45: 0x1E, 0x1E, 0x1C, 0x18, 0x00, 0x00, 0x00
      +                          , 0x00;main.c: 46: };
   856  000C7A  EE21  F020         	lfsr	2,main@F82
   857  000C7E  EE10  F099         	lfsr	1,main@logo1
   858  000C82  0E1F               	movlw	31
   859  000C84                     u2011:
   860  000C84  CFDB FFE3          	movff	plusw2,plusw1
   861  000C88  06E8               	decf	wreg,f,c
   862  000C8A  E2FC               	bc	u2011
   863                           
   864                           ;main.c: 48: for (i = 0; i < 32; i++)
   865  000C8C  0E00               	movlw	0
   866  000C8E  0100               	movlb	0	; () banked
   867  000C90  6FCE               	movwf	main@i& (0+255),b
   868  000C92                     l2374:
   869                           
   870                           ; BSR set to: 0
   871                           ;main.c: 49: lcdData(logo1[i]);
   872  000C92  51CE               	movf	main@i& (0+255),w,b
   873  000C94  0F99               	addlw	low main@logo1
   874  000C96  6ED9               	movwf	fsr2l,c
   875  000C98  6ADA               	clrf	fsr2h,c
   876  000C9A  50DF               	movf	indf2,w,c
   877  000C9C  EC0C  F009         	call	_lcdData
   878  000CA0  0100               	movlb	0	; () banked
   879  000CA2  2BCE               	incf	main@i& (0+255),f,b
   880                           
   881                           ; BSR set to: 0
   882  000CA4  0E1F               	movlw	31
   883  000CA6  65CE               	cpfsgt	main@i& (0+255),b
   884  000CA8  D7F4               	goto	l2374
   885                           
   886                           ; BSR set to: 0
   887                           ;main.c: 50: lcdCommand(0x90);
   888  000CAA  0E90               	movlw	144
   889  000CAC  EC82  F008         	call	_lcdCommand
   890                           
   891                           ;main.c: 51: lcdData(0);
   892  000CB0  0E00               	movlw	0
   893  000CB2  EC0C  F009         	call	_lcdData
   894                           
   895                           ;main.c: 52: lcdData(1);
   896  000CB6  0E01               	movlw	1
   897  000CB8  EC0C  F009         	call	_lcdData
   898                           
   899                           ;main.c: 53: lcdCommand(0xD0);
   900  000CBC  0ED0               	movlw	208
   901  000CBE  EC82  F008         	call	_lcdCommand
   902                           
   903                           ;main.c: 54: lcdData(2);
   904  000CC2  0E02               	movlw	2
   905  000CC4  EC0C  F009         	call	_lcdData
   906                           
   907                           ;main.c: 55: lcdData(3);
   908  000CC8  0E03               	movlw	3
   909  000CCA  EC0C  F009         	call	_lcdData
   910                           
   911                           ;main.c: 56: }
   912  000CCE  D7A9               	goto	l2342
   913  000CD0                     __end_of_main:
   914                           	callstack 0
   915                           
   916 ;; *************** function _ssdInit *****************
   917 ;; Defined at:
   918 ;;		line 101 in file "ssd.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 3F/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   932 ;;      Params:         0       0       0       0       0       0       0
   933 ;;      Locals:         0       0       0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0
   935 ;;      Totals:         0       0       0       0       0       0       0
   936 ;;Total ram usage:        0 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; Hardware stack levels required when called: 1
   939 ;; This function calls:
   940 ;;		_pinMode
   941 ;; This function is called by:
   942 ;;		_main
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text1
   947  0011C2                     __ptext1:
   948                           	callstack 0
   949  0011C2                     _ssdInit:
   950                           	callstack 29
   951                           
   952                           ; BSR set to: 0
   953                           ;ssd.c: 103: pinMode(PIN_A2, 0);
   954                           
   955                           ;incstack = 0
   956  0011C2  0E00               	movlw	0
   957  0011C4  6E02               	movwf	(pinMode@pin+1)^0,c
   958  0011C6  0E02               	movlw	2
   959  0011C8  6E01               	movwf	pinMode@pin^0,c
   960  0011CA  0E00               	movlw	0
   961  0011CC  6E04               	movwf	(pinMode@type+1)^0,c
   962  0011CE  0E00               	movlw	0
   963  0011D0  6E03               	movwf	pinMode@type^0,c
   964  0011D2  EC09  F003         	call	_pinMode	;wreg free
   965                           
   966                           ;ssd.c: 104: pinMode(PIN_A3, 0);
   967  0011D6  0E00               	movlw	0
   968  0011D8  6E02               	movwf	(pinMode@pin+1)^0,c
   969  0011DA  0E03               	movlw	3
   970  0011DC  6E01               	movwf	pinMode@pin^0,c
   971  0011DE  0E00               	movlw	0
   972  0011E0  6E04               	movwf	(pinMode@type+1)^0,c
   973  0011E2  0E00               	movlw	0
   974  0011E4  6E03               	movwf	pinMode@type^0,c
   975  0011E6  EC09  F003         	call	_pinMode	;wreg free
   976                           
   977                           ;ssd.c: 105: pinMode(PIN_A4, 0);
   978  0011EA  0E00               	movlw	0
   979  0011EC  6E02               	movwf	(pinMode@pin+1)^0,c
   980  0011EE  0E04               	movlw	4
   981  0011F0  6E01               	movwf	pinMode@pin^0,c
   982  0011F2  0E00               	movlw	0
   983  0011F4  6E04               	movwf	(pinMode@type+1)^0,c
   984  0011F6  0E00               	movlw	0
   985  0011F8  6E03               	movwf	pinMode@type^0,c
   986  0011FA  EC09  F003         	call	_pinMode	;wreg free
   987                           
   988                           ;ssd.c: 106: pinMode(PIN_A5, 0);
   989  0011FE  0E00               	movlw	0
   990  001200  6E02               	movwf	(pinMode@pin+1)^0,c
   991  001202  0E05               	movlw	5
   992  001204  6E01               	movwf	pinMode@pin^0,c
   993  001206  0E00               	movlw	0
   994  001208  6E04               	movwf	(pinMode@type+1)^0,c
   995  00120A  0E00               	movlw	0
   996  00120C  6E03               	movwf	pinMode@type^0,c
   997  00120E  EC09  F003         	call	_pinMode	;wreg free
   998                           
   999                           ;ssd.c: 109: TRISD = 0x00;
  1000  001212  0E00               	movlw	0
  1001  001214  6E95               	movwf	149,c	;volatile
  1002  001216  0012               	return		;funcret
  1003  001218                     __end_of_ssdInit:
  1004                           	callstack 0
  1005                           
  1006 ;; *************** function _lcdInit *****************
  1007 ;; Defined at:
  1008 ;;		line 95 in file "lcd.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;		None
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;		None
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg, status,2, status,0, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1022 ;;      Params:         0       0       0       0       0       0       0
  1023 ;;      Locals:         0       0       0       0       0       0       0
  1024 ;;      Temps:          0       0       0       0       0       0       0
  1025 ;;      Totals:         0       0       0       0       0       0       0
  1026 ;;Total ram usage:        0 bytes
  1027 ;; Hardware stack levels used: 1
  1028 ;; Hardware stack levels required when called: 3
  1029 ;; This function calls:
  1030 ;;		_Delay2ms
  1031 ;;		_lcdCommand
  1032 ;;		_pinMode
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text2
  1039  000FA8                     __ptext2:
  1040                           	callstack 0
  1041  000FA8                     _lcdInit:
  1042                           	callstack 27
  1043                           
  1044                           ;lcd.c: 97: pinMode(PIN_E2, 0);
  1045                           
  1046                           ;incstack = 0
  1047  000FA8  0E00               	movlw	0
  1048  000FAA  6E02               	movwf	(pinMode@pin+1)^0,c
  1049  000FAC  0E22               	movlw	34
  1050  000FAE  6E01               	movwf	pinMode@pin^0,c
  1051  000FB0  0E00               	movlw	0
  1052  000FB2  6E04               	movwf	(pinMode@type+1)^0,c
  1053  000FB4  0E00               	movlw	0
  1054  000FB6  6E03               	movwf	pinMode@type^0,c
  1055  000FB8  EC09  F003         	call	_pinMode	;wreg free
  1056                           
  1057                           ;lcd.c: 98: pinMode(PIN_E1, 0);
  1058  000FBC  0E00               	movlw	0
  1059  000FBE  6E02               	movwf	(pinMode@pin+1)^0,c
  1060  000FC0  0E21               	movlw	33
  1061  000FC2  6E01               	movwf	pinMode@pin^0,c
  1062  000FC4  0E00               	movlw	0
  1063  000FC6  6E04               	movwf	(pinMode@type+1)^0,c
  1064  000FC8  0E00               	movlw	0
  1065  000FCA  6E03               	movwf	pinMode@type^0,c
  1066  000FCC  EC09  F003         	call	_pinMode	;wreg free
  1067                           
  1068                           ;lcd.c: 99: TRISD = 0x00;
  1069  000FD0  0E00               	movlw	0
  1070  000FD2  6E95               	movwf	149,c	;volatile
  1071                           
  1072                           ;lcd.c: 102: Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  1073  000FD4  ECC9  F009         	call	_Delay2ms	;wreg free
  1074  000FD8  ECC9  F009         	call	_Delay2ms	;wreg free
  1075  000FDC  ECC9  F009         	call	_Delay2ms	;wreg free
  1076  000FE0  ECC9  F009         	call	_Delay2ms	;wreg free
  1077  000FE4  ECC9  F009         	call	_Delay2ms	;wreg free
  1078                           
  1079                           ;lcd.c: 104: lcdCommand(0x38);
  1080  000FE8  0E38               	movlw	56
  1081  000FEA  EC82  F008         	call	_lcdCommand
  1082                           
  1083                           ;lcd.c: 105: Delay2ms(); Delay2ms();
  1084  000FEE  ECC9  F009         	call	_Delay2ms	;wreg free
  1085  000FF2  ECC9  F009         	call	_Delay2ms	;wreg free
  1086                           
  1087                           ;lcd.c: 106: lcdCommand(0x38);
  1088  000FF6  0E38               	movlw	56
  1089  000FF8  EC82  F008         	call	_lcdCommand
  1090                           
  1091                           ;lcd.c: 107: Delay2ms();
  1092  000FFC  ECC9  F009         	call	_Delay2ms	;wreg free
  1093                           
  1094                           ;lcd.c: 108: lcdCommand(0x38);
  1095  001000  0E38               	movlw	56
  1096  001002  EC82  F008         	call	_lcdCommand
  1097                           
  1098                           ;lcd.c: 110: lcdCommand(0x38);
  1099  001006  0E38               	movlw	56
  1100  001008  EC82  F008         	call	_lcdCommand
  1101                           
  1102                           ;lcd.c: 111: lcdCommand(0x06);
  1103  00100C  0E06               	movlw	6
  1104  00100E  EC82  F008         	call	_lcdCommand
  1105                           
  1106                           ;lcd.c: 114: lcdCommand(0x0C);
  1107  001012  0E0C               	movlw	12
  1108  001014  EC82  F008         	call	_lcdCommand
  1109                           
  1110                           ;lcd.c: 115: lcdCommand(0x01);
  1111  001018  0E01               	movlw	1
  1112  00101A  EC82  F008         	call	_lcdCommand
  1113  00101E  0012               	return		;funcret
  1114  001020                     __end_of_lcdInit:
  1115                           	callstack 0
  1116                           
  1117 ;; *************** function _pinMode *****************
  1118 ;; Defined at:
  1119 ;;		line 54 in file "io.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  pin             2    0[COMRAM] int 
  1122 ;;  type            2    2[COMRAM] int 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1134 ;;      Params:         4       0       0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0       0       0
  1136 ;;      Temps:          2       0       0       0       0       0       0
  1137 ;;      Totals:         6       0       0       0       0       0       0
  1138 ;;Total ram usage:        6 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_lcdInit
  1144 ;;		_ssdInit
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text3
  1149  000612                     __ptext3:
  1150                           	callstack 0
  1151  000612                     _pinMode:
  1152                           	callstack 29
  1153                           
  1154                           ;io.c: 56: if(pin <8){
  1155                           
  1156                           ;incstack = 0
  1157  000612  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1158  000614  D006               	goto	u1570
  1159  000616  5002               	movf	(pinMode@pin+1)^0,w,c
  1160  000618  E123               	bnz	l2104
  1161  00061A  0E08               	movlw	8
  1162  00061C  5C01               	subwf	pinMode@pin^0,w,c
  1163  00061E  B0D8               	btfsc	status,0,c
  1164  000620  D01F               	goto	l2104
  1165  000622                     u1570:
  1166                           
  1167                           ;io.c: 57: if (type){ ((TRISA) |= (1<<(pin)));}
  1168  000622  5003               	movf	pinMode@type^0,w,c
  1169  000624  1004               	iorwf	(pinMode@type+1)^0,w,c
  1170  000626  B4D8               	btfsc	status,2,c
  1171  000628  D00D               	goto	l2102
  1172  00062A  C001  F005         	movff	pinMode@pin,??_pinMode
  1173  00062E  0E01               	movlw	1
  1174  000630  6E06               	movwf	(??_pinMode+1)^0,c
  1175  000632  2A05               	incf	??_pinMode^0,f,c
  1176  000634  D002               	goto	u1594
  1177  000636                     u1595:
  1178  000636  90D8               	bcf	status,0,c
  1179  000638  3606               	rlcf	(??_pinMode+1)^0,f,c
  1180  00063A                     u1594:
  1181  00063A  2E05               	decfsz	??_pinMode^0,f,c
  1182  00063C  D7FC               	goto	u1595
  1183  00063E  5006               	movf	(??_pinMode+1)^0,w,c
  1184  000640  1292               	iorwf	146,f,c	;volatile
  1185  000642  0012               	return	
  1186  000644                     l2102:
  1187                           
  1188                           ;io.c: 58: else{ ((TRISA) &= ~(1<<(pin)));}
  1189  000644  C001  F005         	movff	pinMode@pin,??_pinMode
  1190  000648  0E01               	movlw	1
  1191  00064A  6E06               	movwf	(??_pinMode+1)^0,c
  1192  00064C  2A05               	incf	??_pinMode^0,f,c
  1193  00064E  D002               	goto	u1604
  1194  000650                     u1605:
  1195  000650  90D8               	bcf	status,0,c
  1196  000652  3606               	rlcf	(??_pinMode+1)^0,f,c
  1197  000654                     u1604:
  1198  000654  2E05               	decfsz	??_pinMode^0,f,c
  1199  000656  D7FC               	goto	u1605
  1200  000658  5006               	movf	(??_pinMode+1)^0,w,c
  1201  00065A  0AFF               	xorlw	255
  1202  00065C  1692               	andwf	146,f,c	;volatile
  1203  00065E  0012               	return	
  1204  000660                     l2104:
  1205  000660  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1206  000662  D006               	goto	u1610
  1207  000664  5002               	movf	(pinMode@pin+1)^0,w,c
  1208  000666  E127               	bnz	l2112
  1209  000668  0E10               	movlw	16
  1210  00066A  5C01               	subwf	pinMode@pin^0,w,c
  1211  00066C  B0D8               	btfsc	status,0,c
  1212  00066E  D023               	goto	l2112
  1213  000670                     u1610:
  1214                           
  1215                           ;io.c: 60: if (type){ ((TRISB) |= (1<<(pin-8)));}
  1216  000670  5003               	movf	pinMode@type^0,w,c
  1217  000672  1004               	iorwf	(pinMode@type+1)^0,w,c
  1218  000674  B4D8               	btfsc	status,2,c
  1219  000676  D00F               	goto	l2110
  1220  000678  C001  F005         	movff	pinMode@pin,??_pinMode
  1221  00067C  0EF8               	movlw	-8
  1222  00067E  2605               	addwf	??_pinMode^0,f,c
  1223  000680  0E01               	movlw	1
  1224  000682  6E06               	movwf	(??_pinMode+1)^0,c
  1225  000684  2A05               	incf	??_pinMode^0,f,c
  1226  000686  D002               	goto	u1634
  1227  000688                     u1635:
  1228  000688  90D8               	bcf	status,0,c
  1229  00068A  3606               	rlcf	(??_pinMode+1)^0,f,c
  1230  00068C                     u1634:
  1231  00068C  2E05               	decfsz	??_pinMode^0,f,c
  1232  00068E  D7FC               	goto	u1635
  1233  000690  5006               	movf	(??_pinMode+1)^0,w,c
  1234  000692  1293               	iorwf	147,f,c	;volatile
  1235  000694  0012               	return	
  1236  000696                     l2110:
  1237                           
  1238                           ;io.c: 61: else{ ((TRISB) &= ~(1<<(pin-8)));}
  1239  000696  C001  F005         	movff	pinMode@pin,??_pinMode
  1240  00069A  0EF8               	movlw	-8
  1241  00069C  2605               	addwf	??_pinMode^0,f,c
  1242  00069E  0E01               	movlw	1
  1243  0006A0  6E06               	movwf	(??_pinMode+1)^0,c
  1244  0006A2  2A05               	incf	??_pinMode^0,f,c
  1245  0006A4  D002               	goto	u1644
  1246  0006A6                     u1645:
  1247  0006A6  90D8               	bcf	status,0,c
  1248  0006A8  3606               	rlcf	(??_pinMode+1)^0,f,c
  1249  0006AA                     u1644:
  1250  0006AA  2E05               	decfsz	??_pinMode^0,f,c
  1251  0006AC  D7FC               	goto	u1645
  1252  0006AE  5006               	movf	(??_pinMode+1)^0,w,c
  1253  0006B0  0AFF               	xorlw	255
  1254  0006B2  1693               	andwf	147,f,c	;volatile
  1255  0006B4  0012               	return	
  1256  0006B6                     l2112:
  1257  0006B6  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1258  0006B8  D006               	goto	u1650
  1259  0006BA  5002               	movf	(pinMode@pin+1)^0,w,c
  1260  0006BC  E127               	bnz	l2120
  1261  0006BE  0E18               	movlw	24
  1262  0006C0  5C01               	subwf	pinMode@pin^0,w,c
  1263  0006C2  B0D8               	btfsc	status,0,c
  1264  0006C4  D023               	goto	l2120
  1265  0006C6                     u1650:
  1266                           
  1267                           ;io.c: 63: if (type){ ((TRISC) |= (1<<(pin-16)));}
  1268  0006C6  5003               	movf	pinMode@type^0,w,c
  1269  0006C8  1004               	iorwf	(pinMode@type+1)^0,w,c
  1270  0006CA  B4D8               	btfsc	status,2,c
  1271  0006CC  D00F               	goto	l2118
  1272  0006CE  C001  F005         	movff	pinMode@pin,??_pinMode
  1273  0006D2  0EF0               	movlw	-16
  1274  0006D4  2605               	addwf	??_pinMode^0,f,c
  1275  0006D6  0E01               	movlw	1
  1276  0006D8  6E06               	movwf	(??_pinMode+1)^0,c
  1277  0006DA  2A05               	incf	??_pinMode^0,f,c
  1278  0006DC  D002               	goto	u1674
  1279  0006DE                     u1675:
  1280  0006DE  90D8               	bcf	status,0,c
  1281  0006E0  3606               	rlcf	(??_pinMode+1)^0,f,c
  1282  0006E2                     u1674:
  1283  0006E2  2E05               	decfsz	??_pinMode^0,f,c
  1284  0006E4  D7FC               	goto	u1675
  1285  0006E6  5006               	movf	(??_pinMode+1)^0,w,c
  1286  0006E8  1294               	iorwf	148,f,c	;volatile
  1287  0006EA  0012               	return	
  1288  0006EC                     l2118:
  1289                           
  1290                           ;io.c: 64: else{ ((TRISC) &= ~(1<<(pin-16)));}
  1291  0006EC  C001  F005         	movff	pinMode@pin,??_pinMode
  1292  0006F0  0EF0               	movlw	-16
  1293  0006F2  2605               	addwf	??_pinMode^0,f,c
  1294  0006F4  0E01               	movlw	1
  1295  0006F6  6E06               	movwf	(??_pinMode+1)^0,c
  1296  0006F8  2A05               	incf	??_pinMode^0,f,c
  1297  0006FA  D002               	goto	u1684
  1298  0006FC                     u1685:
  1299  0006FC  90D8               	bcf	status,0,c
  1300  0006FE  3606               	rlcf	(??_pinMode+1)^0,f,c
  1301  000700                     u1684:
  1302  000700  2E05               	decfsz	??_pinMode^0,f,c
  1303  000702  D7FC               	goto	u1685
  1304  000704  5006               	movf	(??_pinMode+1)^0,w,c
  1305  000706  0AFF               	xorlw	255
  1306  000708  1694               	andwf	148,f,c	;volatile
  1307  00070A  0012               	return	
  1308  00070C                     l2120:
  1309  00070C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1310  00070E  D006               	goto	u1690
  1311  000710  5002               	movf	(pinMode@pin+1)^0,w,c
  1312  000712  E127               	bnz	l2128
  1313  000714  0E20               	movlw	32
  1314  000716  5C01               	subwf	pinMode@pin^0,w,c
  1315  000718  B0D8               	btfsc	status,0,c
  1316  00071A  D023               	goto	l2128
  1317  00071C                     u1690:
  1318                           
  1319                           ;io.c: 66: if (type){ ((TRISD) |= (1<<(pin-24)));}
  1320  00071C  5003               	movf	pinMode@type^0,w,c
  1321  00071E  1004               	iorwf	(pinMode@type+1)^0,w,c
  1322  000720  B4D8               	btfsc	status,2,c
  1323  000722  D00F               	goto	l2126
  1324  000724  C001  F005         	movff	pinMode@pin,??_pinMode
  1325  000728  0EE8               	movlw	-24
  1326  00072A  2605               	addwf	??_pinMode^0,f,c
  1327  00072C  0E01               	movlw	1
  1328  00072E  6E06               	movwf	(??_pinMode+1)^0,c
  1329  000730  2A05               	incf	??_pinMode^0,f,c
  1330  000732  D002               	goto	u1714
  1331  000734                     u1715:
  1332  000734  90D8               	bcf	status,0,c
  1333  000736  3606               	rlcf	(??_pinMode+1)^0,f,c
  1334  000738                     u1714:
  1335  000738  2E05               	decfsz	??_pinMode^0,f,c
  1336  00073A  D7FC               	goto	u1715
  1337  00073C  5006               	movf	(??_pinMode+1)^0,w,c
  1338  00073E  1295               	iorwf	149,f,c	;volatile
  1339  000740  0012               	return	
  1340  000742                     l2126:
  1341                           
  1342                           ;io.c: 67: else{ ((TRISD) &= ~(1<<(pin-24)));}
  1343  000742  C001  F005         	movff	pinMode@pin,??_pinMode
  1344  000746  0EE8               	movlw	-24
  1345  000748  2605               	addwf	??_pinMode^0,f,c
  1346  00074A  0E01               	movlw	1
  1347  00074C  6E06               	movwf	(??_pinMode+1)^0,c
  1348  00074E  2A05               	incf	??_pinMode^0,f,c
  1349  000750  D002               	goto	u1724
  1350  000752                     u1725:
  1351  000752  90D8               	bcf	status,0,c
  1352  000754  3606               	rlcf	(??_pinMode+1)^0,f,c
  1353  000756                     u1724:
  1354  000756  2E05               	decfsz	??_pinMode^0,f,c
  1355  000758  D7FC               	goto	u1725
  1356  00075A  5006               	movf	(??_pinMode+1)^0,w,c
  1357  00075C  0AFF               	xorlw	255
  1358  00075E  1695               	andwf	149,f,c	;volatile
  1359  000760  0012               	return	
  1360  000762                     l2128:
  1361  000762  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1362  000764  D006               	goto	u1730
  1363  000766  5002               	movf	(pinMode@pin+1)^0,w,c
  1364  000768  E126               	bnz	l76
  1365  00076A  0E28               	movlw	40
  1366  00076C  5C01               	subwf	pinMode@pin^0,w,c
  1367  00076E  B0D8               	btfsc	status,0,c
  1368  000770  0012               	return	
  1369  000772                     u1730:
  1370                           
  1371                           ;io.c: 69: if (type){ ((TRISE) |= (1<<(pin-32)));}
  1372  000772  5003               	movf	pinMode@type^0,w,c
  1373  000774  1004               	iorwf	(pinMode@type+1)^0,w,c
  1374  000776  B4D8               	btfsc	status,2,c
  1375  000778  D00F               	goto	l2134
  1376  00077A  C001  F005         	movff	pinMode@pin,??_pinMode
  1377  00077E  0EE0               	movlw	-32
  1378  000780  2605               	addwf	??_pinMode^0,f,c
  1379  000782  0E01               	movlw	1
  1380  000784  6E06               	movwf	(??_pinMode+1)^0,c
  1381  000786  2A05               	incf	??_pinMode^0,f,c
  1382  000788  D002               	goto	u1754
  1383  00078A                     u1755:
  1384  00078A  90D8               	bcf	status,0,c
  1385  00078C  3606               	rlcf	(??_pinMode+1)^0,f,c
  1386  00078E                     u1754:
  1387  00078E  2E05               	decfsz	??_pinMode^0,f,c
  1388  000790  D7FC               	goto	u1755
  1389  000792  5006               	movf	(??_pinMode+1)^0,w,c
  1390  000794  1296               	iorwf	150,f,c	;volatile
  1391  000796  0012               	return	
  1392  000798                     l2134:
  1393                           
  1394                           ;io.c: 70: else{ ((TRISE) &= ~(1<<(pin-32)));}
  1395  000798  C001  F005         	movff	pinMode@pin,??_pinMode
  1396  00079C  0EE0               	movlw	-32
  1397  00079E  2605               	addwf	??_pinMode^0,f,c
  1398  0007A0  0E01               	movlw	1
  1399  0007A2  6E06               	movwf	(??_pinMode+1)^0,c
  1400  0007A4  2A05               	incf	??_pinMode^0,f,c
  1401  0007A6  D002               	goto	u1764
  1402  0007A8                     u1765:
  1403  0007A8  90D8               	bcf	status,0,c
  1404  0007AA  3606               	rlcf	(??_pinMode+1)^0,f,c
  1405  0007AC                     u1764:
  1406  0007AC  2E05               	decfsz	??_pinMode^0,f,c
  1407  0007AE  D7FC               	goto	u1765
  1408  0007B0  5006               	movf	(??_pinMode+1)^0,w,c
  1409  0007B2  0AFF               	xorlw	255
  1410  0007B4  1696               	andwf	150,f,c	;volatile
  1411  0007B6                     l76:
  1412  0007B6  0012               	return		;funcret
  1413  0007B8                     __end_of_pinMode:
  1414                           	callstack 0
  1415                           
  1416 ;; *************** function _kpInit *****************
  1417 ;; Defined at:
  1418 ;;		line 87 in file "keypad.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2, status,0
  1427 ;; Tracked objects:
  1428 ;;		On entry : 3F/0
  1429 ;;		On exit  : 3F/0
  1430 ;;		Unchanged: 3F/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1432 ;;      Params:         0       0       0       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0
  1435 ;;      Totals:         0       0       0       0       0       0       0
  1436 ;;Total ram usage:        0 bytes
  1437 ;; Hardware stack levels used: 1
  1438 ;; This function calls:
  1439 ;;		Nothing
  1440 ;; This function is called by:
  1441 ;;		_main
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text4
  1446  0013B2                     __ptext4:
  1447                           	callstack 0
  1448  0013B2                     _kpInit:
  1449                           	callstack 30
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;keypad.c: 89: TRISB &= 0x07;
  1453                           
  1454                           ;incstack = 0
  1455  0013B2  0E07               	movlw	7
  1456  0013B4  1693               	andwf	147,f,c	;volatile
  1457                           
  1458                           ;keypad.c: 91: TRISD |= 0x0f;
  1459  0013B6  0E0F               	movlw	15
  1460  0013B8  1295               	iorwf	149,f,c	;volatile
  1461                           
  1462                           ; BSR set to: 0
  1463  0013BA  0012               	return		;funcret
  1464  0013BC                     __end_of_kpInit:
  1465                           	callstack 0
  1466                           
  1467 ;; *************** function _Tela1 *****************
  1468 ;; Defined at:
  1469 ;;		line 11 in file "tela1.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  msg2           14    0[BANK0 ] unsigned char [14]
  1474 ;;  msg1            9   14[BANK0 ] unsigned char [9]
  1475 ;;  i               1   24[BANK0 ] unsigned char 
  1476 ;;  tecla           1   23[BANK0 ] unsigned char 
  1477 ;;  time            1    0        unsigned char 
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1487 ;;      Params:         0       0       0       0       0       0       0
  1488 ;;      Locals:         0      25       0       0       0       0       0
  1489 ;;      Temps:          2       0       0       0       0       0       0
  1490 ;;      Totals:         2      25       0       0       0       0       0
  1491 ;;Total ram usage:       27 bytes
  1492 ;; Hardware stack levels used: 1
  1493 ;; Hardware stack levels required when called: 5
  1494 ;; This function calls:
  1495 ;;		_Tela2
  1496 ;;		_kpDebounce
  1497 ;;		_kpRead
  1498 ;;		_lcdCommand
  1499 ;;		_lcdData
  1500 ;;		_ssdDigit
  1501 ;;		_ssdUpdate
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text5
  1508  000ED6                     __ptext5:
  1509                           	callstack 0
  1510  000ED6                     _Tela1:
  1511                           	callstack 25
  1512                           
  1513                           ;tela1.c: 12: char i;;tela1.c: 13: char msg1[9] = "Cafe (1)";
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;incstack = 0
  1517  000ED6  EE20  F0ED         	lfsr	2,Tela1@F76
  1518  000EDA  EE10  F08E         	lfsr	1,Tela1@msg1
  1519  000EDE  0E08               	movlw	8
  1520  000EE0                     u1881:
  1521  000EE0  CFDB FFE3          	movff	plusw2,plusw1
  1522  000EE4  06E8               	decf	wreg,f,c
  1523  000EE6  E2FC               	bc	u1881
  1524                           
  1525                           ;tela1.c: 14: char msg2[14] = "Capuccino (2)";
  1526  000EE8  EE21  F05E         	lfsr	2,Tela1@F78
  1527  000EEC  EE10  F080         	lfsr	1,Tela1@msg2
  1528  000EF0  0E0D               	movlw	13
  1529  000EF2                     u1891:
  1530  000EF2  CFDB FFE3          	movff	plusw2,plusw1
  1531  000EF6  06E8               	decf	wreg,f,c
  1532  000EF8  E2FC               	bc	u1891
  1533                           
  1534                           ;tela1.c: 15: char time;;tela1.c: 16: unsigned char tecla;;tela1.c: 18: lcdCommand(0X80)
      +                          ;
  1535  000EFA  0E80               	movlw	128
  1536  000EFC  EC82  F008         	call	_lcdCommand
  1537                           
  1538                           ;tela1.c: 19: for (i = 0; i < 8; i++) {
  1539  000F00  0E00               	movlw	0
  1540  000F02  0100               	movlb	0	; () banked
  1541  000F04  6F98               	movwf	Tela1@i& (0+255),b
  1542  000F06                     l2266:
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;tela1.c: 20: lcdData(msg1[i]);
  1546  000F06  5198               	movf	Tela1@i& (0+255),w,b
  1547  000F08  0F8E               	addlw	low Tela1@msg1
  1548  000F0A  6ED9               	movwf	fsr2l,c
  1549  000F0C  6ADA               	clrf	fsr2h,c
  1550  000F0E  50DF               	movf	indf2,w,c
  1551  000F10  EC0C  F009         	call	_lcdData
  1552  000F14  0100               	movlb	0	; () banked
  1553  000F16  2B98               	incf	Tela1@i& (0+255),f,b
  1554                           
  1555                           ; BSR set to: 0
  1556  000F18  0E07               	movlw	7
  1557  000F1A  6598               	cpfsgt	Tela1@i& (0+255),b
  1558  000F1C  D7F4               	goto	l2266
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;tela1.c: 21: };tela1.c: 22: lcdCommand(0XC0);
  1562  000F1E  0EC0               	movlw	192
  1563  000F20  EC82  F008         	call	_lcdCommand
  1564                           
  1565                           ;tela1.c: 23: for (i = 0; i < 13; i++) {
  1566  000F24  0E00               	movlw	0
  1567  000F26  0100               	movlb	0	; () banked
  1568  000F28  6F98               	movwf	Tela1@i& (0+255),b
  1569  000F2A                     l2280:
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;tela1.c: 24: lcdData(msg2[i]);
  1573  000F2A  5198               	movf	Tela1@i& (0+255),w,b
  1574  000F2C  0F80               	addlw	low Tela1@msg2
  1575  000F2E  6ED9               	movwf	fsr2l,c
  1576  000F30  6ADA               	clrf	fsr2h,c
  1577  000F32  50DF               	movf	indf2,w,c
  1578  000F34  EC0C  F009         	call	_lcdData
  1579  000F38  0100               	movlb	0	; () banked
  1580  000F3A  2B98               	incf	Tela1@i& (0+255),f,b
  1581                           
  1582                           ; BSR set to: 0
  1583  000F3C  0E0C               	movlw	12
  1584  000F3E  6598               	cpfsgt	Tela1@i& (0+255),b
  1585  000F40  D7F4               	goto	l2280
  1586  000F42                     u1910:
  1587                           
  1588                           ;tela1.c: 28: ssdUpdate();
  1589  000F42  ECAF  F004         	call	_ssdUpdate	;wreg free
  1590                           
  1591                           ;tela1.c: 29: kpDebounce();
  1592  000F46  EC46  F005         	call	_kpDebounce	;wreg free
  1593                           
  1594                           ;tela1.c: 30: if (kpRead() != tecla) {
  1595  000F4A  0100               	movlb	0	; () banked
  1596  000F4C  5197               	movf	Tela1@tecla& (0+255),w,b
  1597  000F4E  6E6A               	movwf	??_Tela1^0,c
  1598  000F50  6A6B               	clrf	(??_Tela1+1)^0,c
  1599  000F52  ECDE  F009         	call	_kpRead	;wreg free
  1600  000F56  506A               	movf	??_Tela1^0,w,c
  1601  000F58  1801               	xorwf	?_kpRead^0,w,c
  1602  000F5A  E104               	bnz	u1920
  1603  000F5C  506B               	movf	(??_Tela1+1)^0,w,c
  1604  000F5E  1802               	xorwf	(?_kpRead+1)^0,w,c
  1605  000F60  B4D8               	btfsc	status,2,c
  1606  000F62  D7EF               	goto	u1910
  1607  000F64                     u1920:
  1608                           
  1609                           ;tela1.c: 31: tecla = kpRead();
  1610  000F64  ECDE  F009         	call	_kpRead	;wreg free
  1611  000F68  5001               	movf	?_kpRead^0,w,c
  1612  000F6A  0100               	movlb	0	; () banked
  1613  000F6C  6F97               	movwf	Tela1@tecla& (0+255),b
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;tela1.c: 32: if (((kpRead()) & (1<<(3)))) {
  1617  000F6E  ECDE  F009         	call	_kpRead	;wreg free
  1618  000F72  A601               	btfss	?_kpRead^0,3,c
  1619  000F74  D00A               	goto	l2300
  1620                           
  1621                           ;tela1.c: 33: ssdDigit(1, 3);
  1622  000F76  0E03               	movlw	3
  1623  000F78  6E01               	movwf	ssdDigit@pos^0,c
  1624  000F7A  0E01               	movlw	1
  1625  000F7C  EC97  F009         	call	_ssdDigit
  1626                           
  1627                           ;tela1.c: 34: lcdCommand(0x01);
  1628  000F80  0E01               	movlw	1
  1629  000F82  EC82  F008         	call	_lcdCommand
  1630                           
  1631                           ;tela1.c: 35: Tela2();
  1632  000F86  EC68  F006         	call	_Tela2	;wreg free
  1633  000F8A                     l2300:
  1634                           
  1635                           ;tela1.c: 36: };tela1.c: 37: if (((kpRead()) & (1<<(7)))) {
  1636  000F8A  ECDE  F009         	call	_kpRead	;wreg free
  1637  000F8E  AE01               	btfss	?_kpRead^0,7,c
  1638  000F90  D7D8               	goto	u1910
  1639                           
  1640                           ;tela1.c: 38: ssdDigit(2, 3);
  1641  000F92  0E03               	movlw	3
  1642  000F94  6E01               	movwf	ssdDigit@pos^0,c
  1643  000F96  0E02               	movlw	2
  1644  000F98  EC97  F009         	call	_ssdDigit
  1645                           
  1646                           ;tela1.c: 39: lcdCommand(0x01);
  1647  000F9C  0E01               	movlw	1
  1648  000F9E  EC82  F008         	call	_lcdCommand
  1649                           
  1650                           ;tela1.c: 40: Tela2();
  1651  000FA2  EC68  F006         	call	_Tela2	;wreg free
  1652  000FA6  D7CD               	goto	u1910
  1653  000FA8                     __end_of_Tela1:
  1654                           	callstack 0
  1655                           
  1656 ;; *************** function _Tela2 *****************
  1657 ;; Defined at:
  1658 ;;		line 10 in file "tela2.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  msg3           10   92[COMRAM] unsigned char [10]
  1663 ;;  msg2           10   82[COMRAM] unsigned char [10]
  1664 ;;  msg1           10   72[COMRAM] unsigned char [10]
  1665 ;;  i               1  104[COMRAM] unsigned char 
  1666 ;;  time            1  103[COMRAM] unsigned char 
  1667 ;;  tecla           1  102[COMRAM] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1677 ;;      Params:         0       0       0       0       0       0       0
  1678 ;;      Locals:        33       0       0       0       0       0       0
  1679 ;;      Temps:          2       0       0       0       0       0       0
  1680 ;;      Totals:        35       0       0       0       0       0       0
  1681 ;;Total ram usage:       35 bytes
  1682 ;; Hardware stack levels used: 1
  1683 ;; Hardware stack levels required when called: 4
  1684 ;; This function calls:
  1685 ;;		_Tela3
  1686 ;;		_kpDebounce
  1687 ;;		_kpRead
  1688 ;;		_lcdCommand
  1689 ;;		_lcdData
  1690 ;;		_ssdDigit
  1691 ;;		_ssdUpdate
  1692 ;; This function is called by:
  1693 ;;		_Tela1
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text6
  1698  000CD0                     __ptext6:
  1699                           	callstack 0
  1700  000CD0                     _Tela2:
  1701                           	callstack 25
  1702                           
  1703                           ;tela2.c: 11: char i;;tela2.c: 12: char msg1[10] = "Forte (4)";
  1704                           
  1705                           ;incstack = 0
  1706  000CD0  EE20  F0E3         	lfsr	2,Tela2@F78
  1707  000CD4  EE10  F049         	lfsr	1,Tela2@msg1
  1708  000CD8  0E09               	movlw	9
  1709  000CDA                     u1771:
  1710  000CDA  CFDB FFE3          	movff	plusw2,plusw1
  1711  000CDE  06E8               	decf	wreg,f,c
  1712  000CE0  E2FC               	bc	u1771
  1713                           
  1714                           ;tela2.c: 13: char msg2[10] = "Medio (5)";
  1715  000CE2  EE20  F0D9         	lfsr	2,Tela2@F80
  1716  000CE6  EE10  F053         	lfsr	1,Tela2@msg2
  1717  000CEA  0E09               	movlw	9
  1718  000CEC                     u1781:
  1719  000CEC  CFDB FFE3          	movff	plusw2,plusw1
  1720  000CF0  06E8               	decf	wreg,f,c
  1721  000CF2  E2FC               	bc	u1781
  1722                           
  1723                           ;tela2.c: 14: char msg3[10] = "Fraco (6)";
  1724  000CF4  EE20  F0CF         	lfsr	2,Tela2@F82
  1725  000CF8  EE10  F05D         	lfsr	1,Tela2@msg3
  1726  000CFC  0E09               	movlw	9
  1727  000CFE                     u1791:
  1728  000CFE  CFDB FFE3          	movff	plusw2,plusw1
  1729  000D02  06E8               	decf	wreg,f,c
  1730  000D04  E2FC               	bc	u1791
  1731                           
  1732                           ;tela2.c: 15: char time;;tela2.c: 16: unsigned char tecla;;tela2.c: 17: lcdCommand(0X80)
      +                          ;
  1733  000D06  0E80               	movlw	128
  1734  000D08  EC82  F008         	call	_lcdCommand
  1735                           
  1736                           ;tela2.c: 18: for (i = 0; i < 9; i++) {
  1737  000D0C  0E00               	movlw	0
  1738  000D0E  6E69               	movwf	Tela2@i^0,c
  1739  000D10                     l2146:
  1740                           
  1741                           ;tela2.c: 19: lcdData(msg1[i]);
  1742  000D10  5069               	movf	Tela2@i^0,w,c
  1743  000D12  0F49               	addlw	low Tela2@msg1
  1744  000D14  6ED9               	movwf	fsr2l,c
  1745  000D16  6ADA               	clrf	fsr2h,c
  1746  000D18  50DF               	movf	indf2,w,c
  1747  000D1A  EC0C  F009         	call	_lcdData
  1748  000D1E  2A69               	incf	Tela2@i^0,f,c
  1749  000D20  0E08               	movlw	8
  1750  000D22  6469               	cpfsgt	Tela2@i^0,c
  1751  000D24  D7F5               	goto	l2146
  1752                           
  1753                           ;tela2.c: 20: };tela2.c: 21: lcdCommand(0XC0);
  1754  000D26  0EC0               	movlw	192
  1755  000D28  EC82  F008         	call	_lcdCommand
  1756                           
  1757                           ;tela2.c: 22: for (i = 0; i < 9; i++) {
  1758  000D2C  0E00               	movlw	0
  1759  000D2E  6E69               	movwf	Tela2@i^0,c
  1760  000D30                     l2160:
  1761                           
  1762                           ;tela2.c: 23: lcdData(msg2[i]);
  1763  000D30  5069               	movf	Tela2@i^0,w,c
  1764  000D32  0F53               	addlw	low Tela2@msg2
  1765  000D34  6ED9               	movwf	fsr2l,c
  1766  000D36  6ADA               	clrf	fsr2h,c
  1767  000D38  50DF               	movf	indf2,w,c
  1768  000D3A  EC0C  F009         	call	_lcdData
  1769  000D3E  2A69               	incf	Tela2@i^0,f,c
  1770  000D40  0E08               	movlw	8
  1771  000D42  6469               	cpfsgt	Tela2@i^0,c
  1772  000D44  D7F5               	goto	l2160
  1773                           
  1774                           ;tela2.c: 24: };tela2.c: 25: lcdCommand(0X90);
  1775  000D46  0E90               	movlw	144
  1776  000D48  EC82  F008         	call	_lcdCommand
  1777                           
  1778                           ;tela2.c: 26: for (i = 0; i < 9; i++) {
  1779  000D4C  0E00               	movlw	0
  1780  000D4E  6E69               	movwf	Tela2@i^0,c
  1781  000D50                     l2174:
  1782                           
  1783                           ;tela2.c: 27: lcdData(msg3[i]);
  1784  000D50  5069               	movf	Tela2@i^0,w,c
  1785  000D52  0F5D               	addlw	low Tela2@msg3
  1786  000D54  6ED9               	movwf	fsr2l,c
  1787  000D56  6ADA               	clrf	fsr2h,c
  1788  000D58  50DF               	movf	indf2,w,c
  1789  000D5A  EC0C  F009         	call	_lcdData
  1790  000D5E  2A69               	incf	Tela2@i^0,f,c
  1791  000D60  0E08               	movlw	8
  1792  000D62  6469               	cpfsgt	Tela2@i^0,c
  1793  000D64  D7F5               	goto	l2174
  1794  000D66                     u1820:
  1795                           
  1796                           ;tela2.c: 31: ssdUpdate();
  1797  000D66  ECAF  F004         	call	_ssdUpdate	;wreg free
  1798                           
  1799                           ;tela2.c: 32: kpDebounce();
  1800  000D6A  EC46  F005         	call	_kpDebounce	;wreg free
  1801                           
  1802                           ;tela2.c: 33: if (kpRead() != tecla) {
  1803  000D6E  5067               	movf	Tela2@tecla^0,w,c
  1804  000D70  6E47               	movwf	??_Tela2^0,c
  1805  000D72  6A48               	clrf	(??_Tela2+1)^0,c
  1806  000D74  ECDE  F009         	call	_kpRead	;wreg free
  1807  000D78  5047               	movf	??_Tela2^0,w,c
  1808  000D7A  1801               	xorwf	?_kpRead^0,w,c
  1809  000D7C  E104               	bnz	u1830
  1810  000D7E  5048               	movf	(??_Tela2+1)^0,w,c
  1811  000D80  1802               	xorwf	(?_kpRead+1)^0,w,c
  1812  000D82  B4D8               	btfsc	status,2,c
  1813  000D84  D02E               	goto	l2206
  1814  000D86                     u1830:
  1815                           
  1816                           ;tela2.c: 34: tecla = kpRead();
  1817  000D86  ECDE  F009         	call	_kpRead	;wreg free
  1818  000D8A  5001               	movf	?_kpRead^0,w,c
  1819  000D8C  6E67               	movwf	Tela2@tecla^0,c
  1820                           
  1821                           ;tela2.c: 35: if (((kpRead()) & (1<<(2)))) {
  1822  000D8E  ECDE  F009         	call	_kpRead	;wreg free
  1823  000D92  A401               	btfss	?_kpRead^0,2,c
  1824  000D94  D00A               	goto	l2194
  1825                           
  1826                           ;tela2.c: 36: ssdDigit(4, 3);
  1827  000D96  0E03               	movlw	3
  1828  000D98  6E01               	movwf	ssdDigit@pos^0,c
  1829  000D9A  0E04               	movlw	4
  1830  000D9C  EC97  F009         	call	_ssdDigit
  1831                           
  1832                           ;tela2.c: 37: lcdCommand(0x01);
  1833  000DA0  0E01               	movlw	1
  1834  000DA2  EC82  F008         	call	_lcdCommand
  1835                           
  1836                           ;tela2.c: 38: Tela3();
  1837  000DA6  ECF8  F006         	call	_Tela3	;wreg free
  1838  000DAA                     l2194:
  1839                           
  1840                           ;tela2.c: 39: };tela2.c: 40: if (((kpRead()) & (1<<(6)))) {
  1841  000DAA  ECDE  F009         	call	_kpRead	;wreg free
  1842  000DAE  AC01               	btfss	?_kpRead^0,6,c
  1843  000DB0  D00A               	goto	l2200
  1844                           
  1845                           ;tela2.c: 41: ssdDigit(5, 3);
  1846  000DB2  0E03               	movlw	3
  1847  000DB4  6E01               	movwf	ssdDigit@pos^0,c
  1848  000DB6  0E05               	movlw	5
  1849  000DB8  EC97  F009         	call	_ssdDigit
  1850                           
  1851                           ;tela2.c: 42: lcdCommand(0x01);
  1852  000DBC  0E01               	movlw	1
  1853  000DBE  EC82  F008         	call	_lcdCommand
  1854                           
  1855                           ;tela2.c: 43: Tela3();
  1856  000DC2  ECF8  F006         	call	_Tela3	;wreg free
  1857  000DC6                     l2200:
  1858                           
  1859                           ;tela2.c: 44: };tela2.c: 45: if (((kpRead()) & (1<<(10)))) {
  1860  000DC6  ECDE  F009         	call	_kpRead	;wreg free
  1861  000DCA  A402               	btfss	(?_kpRead+1)^0,2,c
  1862  000DCC  D00A               	goto	l2206
  1863                           
  1864                           ;tela2.c: 46: ssdDigit(6, 3);
  1865  000DCE  0E03               	movlw	3
  1866  000DD0  6E01               	movwf	ssdDigit@pos^0,c
  1867  000DD2  0E06               	movlw	6
  1868  000DD4  EC97  F009         	call	_ssdDigit
  1869                           
  1870                           ;tela2.c: 47: lcdCommand(0x01);
  1871  000DD8  0E01               	movlw	1
  1872  000DDA  EC82  F008         	call	_lcdCommand
  1873                           
  1874                           ;tela2.c: 48: Tela3();
  1875  000DDE  ECF8  F006         	call	_Tela3	;wreg free
  1876  000DE2                     l2206:
  1877                           
  1878                           ;tela2.c: 49: };tela2.c: 50: };tela2.c: 51: for (time = 0; time < 100; time++);
  1879  000DE2  0E00               	movlw	0
  1880  000DE4  6E68               	movwf	Tela2@time^0,c
  1881  000DE6                     l2212:
  1882  000DE6  2A68               	incf	Tela2@time^0,f,c
  1883  000DE8  0E63               	movlw	99
  1884  000DEA  6468               	cpfsgt	Tela2@time^0,c
  1885  000DEC  D7FC               	goto	l2212
  1886  000DEE  D7BB               	goto	u1820
  1887  000DF0                     __end_of_Tela2:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function _ssdDigit *****************
  1891 ;; Defined at:
  1892 ;;		line 38 in file "ssd.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  val             1    wreg     unsigned char 
  1895 ;;  pos             1    0[COMRAM] unsigned char 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  val             1    1[COMRAM] unsigned char 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1907 ;;      Params:         1       0       0       0       0       0       0
  1908 ;;      Locals:         1       0       0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0
  1910 ;;      Totals:         2       0       0       0       0       0       0
  1911 ;;Total ram usage:        2 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;;		_Tela1
  1918 ;;		_Tela2
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text7
  1923  00132E                     __ptext7:
  1924                           	callstack 0
  1925  00132E                     _ssdDigit:
  1926                           	callstack 30
  1927                           
  1928                           ;incstack = 0
  1929                           ;ssdDigit@val stored from wreg
  1930  00132E  6E02               	movwf	ssdDigit@val^0,c
  1931                           
  1932                           ;ssd.c: 39: if (pos == 0) {
  1933  001330  5001               	movf	ssdDigit@pos^0,w,c
  1934  001332  B4D8               	btfsc	status,2,c
  1935                           
  1936                           ;ssd.c: 40: v0 = val;
  1937  001334  C002  F077         	movff	ssdDigit@val,_v0
  1938                           
  1939                           ;ssd.c: 41: };ssd.c: 42: if (pos == 1) {
  1940  001338  0401               	decf	ssdDigit@pos^0,w,c
  1941  00133A  B4D8               	btfsc	status,2,c
  1942                           
  1943                           ;ssd.c: 43: v1 = val;
  1944  00133C  C002  F076         	movff	ssdDigit@val,_v1
  1945                           
  1946                           ;ssd.c: 44: };ssd.c: 45: if (pos == 2) {
  1947  001340  0E02               	movlw	2
  1948  001342  1801               	xorwf	ssdDigit@pos^0,w,c
  1949  001344  B4D8               	btfsc	status,2,c
  1950                           
  1951                           ;ssd.c: 46: v2 = val;
  1952  001346  C002  F075         	movff	ssdDigit@val,_v2
  1953                           
  1954                           ;ssd.c: 47: };ssd.c: 48: if (pos == 3) {
  1955  00134A  0E03               	movlw	3
  1956  00134C  1801               	xorwf	ssdDigit@pos^0,w,c
  1957  00134E  A4D8               	btfss	status,2,c
  1958  001350  0012               	return	
  1959                           
  1960                           ;ssd.c: 49: v3 = val;
  1961  001352  C002  F074         	movff	ssdDigit@val,_v3
  1962  001356  0012               	return		;funcret
  1963  001358                     __end_of_ssdDigit:
  1964                           	callstack 0
  1965                           
  1966 ;; *************** function _kpRead *****************
  1967 ;; Defined at:
  1968 ;;		line 35 in file "keypad.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  2    0[COMRAM] unsigned int 
  1975 ;; Registers used:
  1976 ;;		None
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1982 ;;      Params:         2       0       0       0       0       0       0
  1983 ;;      Locals:         0       0       0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0
  1985 ;;      Totals:         2       0       0       0       0       0       0
  1986 ;;Total ram usage:        2 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;;		_Tela1
  1993 ;;		_Tela2
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text8
  1998  0013BC                     __ptext8:
  1999                           	callstack 0
  2000  0013BC                     _kpRead:
  2001                           	callstack 30
  2002                           
  2003                           ;keypad.c: 36: return valor;
  2004                           
  2005                           ;incstack = 0
  2006  0013BC  C072  F001         	movff	_valor,?_kpRead
  2007  0013C0  C073  F002         	movff	_valor+1,?_kpRead+1
  2008  0013C4  0012               	return		;funcret
  2009  0013C6                     __end_of_kpRead:
  2010                           	callstack 0
  2011                           
  2012 ;; *************** function _kpDebounce *****************
  2013 ;; Defined at:
  2014 ;;		line 39 in file "keypad.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  k               2    6[COMRAM] int 
  2019 ;;  i               1    9[COMRAM] unsigned char 
  2020 ;;  j               1    8[COMRAM] unsigned char 
  2021 ;;  old_D           1    5[COMRAM] unsigned char 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0, prodl, prodh
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2031 ;;      Params:         0       0       0       0       0       0       0
  2032 ;;      Locals:         5       0       0       0       0       0       0
  2033 ;;      Temps:          5       0       0       0       0       0       0
  2034 ;;      Totals:        10       0       0       0       0       0       0
  2035 ;;Total ram usage:       10 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; This function calls:
  2038 ;;		Nothing
  2039 ;; This function is called by:
  2040 ;;		_main
  2041 ;;		_Tela1
  2042 ;;		_Tela2
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text9
  2047  000A8C                     __ptext9:
  2048                           	callstack 0
  2049  000A8C                     _kpDebounce:
  2050                           	callstack 30
  2051                           
  2052                           ;keypad.c: 40: unsigned char i, j;;keypad.c: 41: static unsigned char tempo;;keypad.c: 4
      +                          2: static unsigned int valorNovo = 0x0000;;keypad.c: 43: static unsigned int valorAntigo
      +                           = 0x0000;;keypad.c: 46: unsigned char old_D;;keypad.c: 47: old_D = PORTD;
  2053                           
  2054                           ;incstack = 0
  2055  000A8C  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  2056                           
  2057                           ;keypad.c: 51: TRISD |= 0x0f;
  2058  000A90  0E0F               	movlw	15
  2059  000A92  1295               	iorwf	149,f,c	;volatile
  2060                           
  2061                           ;keypad.c: 53: for (i = 0; i < 3; i++) {
  2062  000A94  0E00               	movlw	0
  2063  000A96  6E0A               	movwf	kpDebounce@i^0,c
  2064  000A98                     l1972:
  2065                           
  2066                           ;keypad.c: 55: TRISB &= 0xF8;
  2067  000A98  0EF8               	movlw	248
  2068  000A9A  1693               	andwf	147,f,c	;volatile
  2069                           
  2070                           ;keypad.c: 57: ((TRISB) |= (1<<(i)));
  2071  000A9C  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  2072  000AA0  0E01               	movlw	1
  2073  000AA2  6E02               	movwf	(??_kpDebounce+1)^0,c
  2074  000AA4  2A01               	incf	??_kpDebounce^0,f,c
  2075  000AA6  D002               	goto	u1364
  2076  000AA8                     u1365:
  2077  000AA8  90D8               	bcf	status,0,c
  2078  000AAA  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  2079  000AAC                     u1364:
  2080  000AAC  2E01               	decfsz	??_kpDebounce^0,f,c
  2081  000AAE  D7FC               	goto	u1365
  2082  000AB0  5002               	movf	(??_kpDebounce+1)^0,w,c
  2083  000AB2  1293               	iorwf	147,f,c	;volatile
  2084                           
  2085                           ;keypad.c: 59: PORTB |= 0x07;
  2086  000AB4  0E07               	movlw	7
  2087  000AB6  1281               	iorwf	129,f,c	;volatile
  2088                           
  2089                           ;keypad.c: 60: ((PORTB) &= ~(1<<(i)));
  2090  000AB8  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  2091  000ABC  0E01               	movlw	1
  2092  000ABE  6E02               	movwf	(??_kpDebounce+1)^0,c
  2093  000AC0  2A01               	incf	??_kpDebounce^0,f,c
  2094  000AC2  D002               	goto	u1374
  2095  000AC4                     u1375:
  2096  000AC4  90D8               	bcf	status,0,c
  2097  000AC6  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  2098  000AC8                     u1374:
  2099  000AC8  2E01               	decfsz	??_kpDebounce^0,f,c
  2100  000ACA  D7FC               	goto	u1375
  2101  000ACC  5002               	movf	(??_kpDebounce+1)^0,w,c
  2102  000ACE  0AFF               	xorlw	255
  2103  000AD0  1681               	andwf	129,f,c	;volatile
  2104                           
  2105                           ;keypad.c: 63: for (int k = 0; k < 10; k++);
  2106  000AD2  0E00               	movlw	0
  2107  000AD4  6E08               	movwf	(kpDebounce@k+1)^0,c
  2108  000AD6  0E00               	movlw	0
  2109  000AD8  6E07               	movwf	kpDebounce@k^0,c
  2110  000ADA                     l1980:
  2111  000ADA  4A07               	infsnz	kpDebounce@k^0,f,c
  2112  000ADC  2A08               	incf	(kpDebounce@k+1)^0,f,c
  2113  000ADE  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  2114  000AE0  D7FC               	goto	l1980
  2115  000AE2  5008               	movf	(kpDebounce@k+1)^0,w,c
  2116  000AE4  E104               	bnz	u1380
  2117  000AE6  0E0A               	movlw	10
  2118  000AE8  5C07               	subwf	kpDebounce@k^0,w,c
  2119  000AEA  A0D8               	btfss	status,0,c
  2120  000AEC  D7F6               	goto	l1980
  2121  000AEE                     u1380:
  2122                           
  2123                           ;keypad.c: 66: for (j = 0; j < 4; j++) {
  2124  000AEE  0E00               	movlw	0
  2125  000AF0  6E09               	movwf	kpDebounce@j^0,c
  2126  000AF2                     l1990:
  2127                           
  2128                           ;keypad.c: 67: if (!((PORTD) & (1<<(j)))) {
  2129  000AF2  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  2130  000AF6  0E01               	movlw	1
  2131  000AF8  6E02               	movwf	(??_kpDebounce+1)^0,c
  2132  000AFA  2A01               	incf	??_kpDebounce^0,f,c
  2133  000AFC  D002               	goto	u1394
  2134  000AFE                     u1395:
  2135  000AFE  90D8               	bcf	status,0,c
  2136  000B00  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  2137  000B02                     u1394:
  2138  000B02  2E01               	decfsz	??_kpDebounce^0,f,c
  2139  000B04  D7FC               	goto	u1395
  2140  000B06  5002               	movf	(??_kpDebounce+1)^0,w,c
  2141  000B08  1483               	andwf	131,w,c	;volatile
  2142  000B0A  0900               	iorlw	0
  2143  000B0C  A4D8               	btfss	status,2,c
  2144  000B0E  D015               	goto	l1994
  2145                           
  2146                           ;keypad.c: 68: ((valorNovo) |= (1<<((i * 4) + j)));
  2147  000B10  500A               	movf	kpDebounce@i^0,w,c
  2148  000B12  0D04               	mullw	4
  2149  000B14  50F3               	movf	243,w,c
  2150  000B16  2409               	addwf	kpDebounce@j^0,w,c
  2151  000B18  6E01               	movwf	??_kpDebounce^0,c
  2152  000B1A  0E01               	movlw	1
  2153  000B1C  6E02               	movwf	(??_kpDebounce+1)^0,c
  2154  000B1E  0E00               	movlw	0
  2155  000B20  6E03               	movwf	(??_kpDebounce+2)^0,c
  2156  000B22  2A01               	incf	??_kpDebounce^0,f,c
  2157  000B24  D003               	goto	u1414
  2158  000B26                     u1415:
  2159  000B26  90D8               	bcf	status,0,c
  2160  000B28  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  2161  000B2A  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  2162  000B2C                     u1414:
  2163  000B2C  2E01               	decfsz	??_kpDebounce^0,f,c
  2164  000B2E  D7FB               	goto	u1415
  2165  000B30  5002               	movf	(??_kpDebounce+1)^0,w,c
  2166  000B32  1270               	iorwf	kpDebounce@valorNovo^0,f,c
  2167  000B34  5003               	movf	(??_kpDebounce+2)^0,w,c
  2168  000B36  1271               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  2169                           
  2170                           ;keypad.c: 69: } else {
  2171  000B38  D018               	goto	l1996
  2172  000B3A                     l1994:
  2173                           
  2174                           ;keypad.c: 70: ((valorNovo) &= ~(1<<((i * 4) + j)));
  2175  000B3A  500A               	movf	kpDebounce@i^0,w,c
  2176  000B3C  0D04               	mullw	4
  2177  000B3E  50F3               	movf	243,w,c
  2178  000B40  2409               	addwf	kpDebounce@j^0,w,c
  2179  000B42  6E01               	movwf	??_kpDebounce^0,c
  2180  000B44  0E01               	movlw	1
  2181  000B46  6E02               	movwf	(??_kpDebounce+1)^0,c
  2182  000B48  0E00               	movlw	0
  2183  000B4A  6E03               	movwf	(??_kpDebounce+2)^0,c
  2184  000B4C  2A01               	incf	??_kpDebounce^0,f,c
  2185  000B4E  D003               	goto	u1424
  2186  000B50                     u1425:
  2187  000B50  90D8               	bcf	status,0,c
  2188  000B52  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  2189  000B54  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  2190  000B56                     u1424:
  2191  000B56  2E01               	decfsz	??_kpDebounce^0,f,c
  2192  000B58  D7FB               	goto	u1425
  2193  000B5A  1C02               	comf	(??_kpDebounce+1)^0,w,c
  2194  000B5C  6E04               	movwf	(??_kpDebounce+3)^0,c
  2195  000B5E  1C03               	comf	(??_kpDebounce+2)^0,w,c
  2196  000B60  6E05               	movwf	(??_kpDebounce+4)^0,c
  2197  000B62  5004               	movf	(??_kpDebounce+3)^0,w,c
  2198  000B64  1670               	andwf	kpDebounce@valorNovo^0,f,c
  2199  000B66  5005               	movf	(??_kpDebounce+4)^0,w,c
  2200  000B68  1671               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  2201  000B6A                     l1996:
  2202  000B6A  2A09               	incf	kpDebounce@j^0,f,c
  2203  000B6C  0E03               	movlw	3
  2204  000B6E  6409               	cpfsgt	kpDebounce@j^0,c
  2205  000B70  D7C0               	goto	l1990
  2206  000B72  2A0A               	incf	kpDebounce@i^0,f,c
  2207  000B74  0E02               	movlw	2
  2208  000B76  640A               	cpfsgt	kpDebounce@i^0,c
  2209  000B78  D78F               	goto	l1972
  2210                           
  2211                           ;keypad.c: 71: };keypad.c: 72: };keypad.c: 73: };keypad.c: 74: if (valorAntigo == valorN
      +                          ovo) {
  2212  000B7A  5070               	movf	kpDebounce@valorNovo^0,w,c
  2213  000B7C  186E               	xorwf	kpDebounce@valorAntigo^0,w,c
  2214  000B7E  E106               	bnz	l2008
  2215  000B80  5071               	movf	(kpDebounce@valorNovo+1)^0,w,c
  2216  000B82  186F               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  2217  000B84  A4D8               	btfss	status,2,c
  2218  000B86  D002               	goto	l2008
  2219                           
  2220                           ;keypad.c: 75: tempo--;
  2221  000B88  0679               	decf	kpDebounce@tempo^0,f,c
  2222                           
  2223                           ;keypad.c: 76: } else {
  2224  000B8A  D006               	goto	l107
  2225  000B8C                     l2008:
  2226                           
  2227                           ;keypad.c: 77: tempo = 10;
  2228  000B8C  0E0A               	movlw	10
  2229  000B8E  6E79               	movwf	kpDebounce@tempo^0,c
  2230                           
  2231                           ;keypad.c: 78: valorAntigo = valorNovo;
  2232  000B90  C070  F06E         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  2233  000B94  C071  F06F         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  2234  000B98                     l107:
  2235                           
  2236                           ;keypad.c: 79: };keypad.c: 80: if (tempo == 0) {
  2237  000B98  5079               	movf	kpDebounce@tempo^0,w,c
  2238  000B9A  A4D8               	btfss	status,2,c
  2239  000B9C  D004               	goto	l108
  2240                           
  2241                           ;keypad.c: 81: valor = valorAntigo;
  2242  000B9E  C06E  F072         	movff	kpDebounce@valorAntigo,_valor
  2243  000BA2  C06F  F073         	movff	kpDebounce@valorAntigo+1,_valor+1
  2244  000BA6                     l108:
  2245                           
  2246                           ;keypad.c: 82: };keypad.c: 83: PORTD = old_D;
  2247  000BA6  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  2248                           
  2249                           ;keypad.c: 84: TRISD = 0x00;
  2250  000BAA  0E00               	movlw	0
  2251  000BAC  6E95               	movwf	149,c	;volatile
  2252  000BAE  0012               	return		;funcret
  2253  000BB0                     __end_of_kpDebounce:
  2254                           	callstack 0
  2255                           
  2256 ;; *************** function _Tela3 *****************
  2257 ;; Defined at:
  2258 ;;		line 25 in file "tela3.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  logo1          32   12[COMRAM] unsigned char [32]
  2263 ;;  msg2           14   44[COMRAM] unsigned char [14]
  2264 ;;  msg1           11   58[COMRAM] unsigned char [11]
  2265 ;;  i               1   69[COMRAM] unsigned char 
  2266 ;;  tecla           1    0        unsigned char 
  2267 ;;  j               1    0        unsigned char 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2277 ;;      Params:         0       0       0       0       0       0       0
  2278 ;;      Locals:        58       0       0       0       0       0       0
  2279 ;;      Temps:          0       0       0       0       0       0       0
  2280 ;;      Totals:        58       0       0       0       0       0       0
  2281 ;;Total ram usage:       58 bytes
  2282 ;; Hardware stack levels used: 1
  2283 ;; Hardware stack levels required when called: 3
  2284 ;; This function calls:
  2285 ;;		_lcdCommand
  2286 ;;		_lcdData
  2287 ;;		_pwmInit
  2288 ;;		_pwmSet1
  2289 ;;		_ssdUpdate
  2290 ;;		_tempo
  2291 ;; This function is called by:
  2292 ;;		_Tela2
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text10
  2297  000DF0                     __ptext10:
  2298                           	callstack 0
  2299  000DF0                     _Tela3:
  2300                           	callstack 25
  2301                           
  2302                           ;tela3.c: 26: (*(volatile __near unsigned char*)0xF95) = 0x00;
  2303                           
  2304                           ;incstack = 0
  2305  000DF0  0E00               	movlw	0
  2306  000DF2  6E95               	movwf	149,c	;volatile
  2307                           
  2308                           ;tela3.c: 27: unsigned char i, j;;tela3.c: 28: char tecla;;tela3.c: 29: char msg1[11] = 
      +                          "Fazendo...";
  2309  000DF4  EE21  F06C         	lfsr	2,Tela3@F92
  2310  000DF8  EE10  F03B         	lfsr	1,Tela3@msg1
  2311  000DFC  0E0A               	movlw	10
  2312  000DFE                     u1511:
  2313  000DFE  CFDB FFE3          	movff	plusw2,plusw1
  2314  000E02  06E8               	decf	wreg,f,c
  2315  000E04  E2FC               	bc	u1511
  2316                           
  2317                           ;tela3.c: 30: char msg2[14] = "Pedido Pronto";
  2318  000E06  EE21  F050         	lfsr	2,Tela3@F94
  2319  000E0A  EE10  F02D         	lfsr	1,Tela3@msg2
  2320  000E0E  0E0D               	movlw	13
  2321  000E10                     u1521:
  2322  000E10  CFDB FFE3          	movff	plusw2,plusw1
  2323  000E14  06E8               	decf	wreg,f,c
  2324  000E16  E2FC               	bc	u1521
  2325                           
  2326                           ;tela3.c: 32: lcdCommand(0x01);
  2327  000E18  0E01               	movlw	1
  2328  000E1A  EC82  F008         	call	_lcdCommand
  2329                           
  2330                           ;tela3.c: 33: lcdCommand(0X80);
  2331  000E1E  0E80               	movlw	128
  2332  000E20  EC82  F008         	call	_lcdCommand
  2333                           
  2334                           ;tela3.c: 34: for (i = 0; i < 10; i++) {
  2335  000E24  0E00               	movlw	0
  2336  000E26  6E46               	movwf	Tela3@i^0,c
  2337  000E28                     l2046:
  2338                           
  2339                           ;tela3.c: 35: lcdData(msg1[i]);
  2340  000E28  5046               	movf	Tela3@i^0,w,c
  2341  000E2A  0F3B               	addlw	low Tela3@msg1
  2342  000E2C  6ED9               	movwf	fsr2l,c
  2343  000E2E  6ADA               	clrf	fsr2h,c
  2344  000E30  50DF               	movf	indf2,w,c
  2345  000E32  EC0C  F009         	call	_lcdData
  2346  000E36  2A46               	incf	Tela3@i^0,f,c
  2347  000E38  0E09               	movlw	9
  2348  000E3A  6446               	cpfsgt	Tela3@i^0,c
  2349  000E3C  D7F5               	goto	l2046
  2350                           
  2351                           ;tela3.c: 36: };tela3.c: 37: pwmInit();
  2352  000E3E  ECBF  F009         	call	_pwmInit	;wreg free
  2353                           
  2354                           ;tela3.c: 38: pwmSet1(99);
  2355  000E42  0E63               	movlw	99
  2356  000E44  EC4C  F008         	call	_pwmSet1
  2357                           
  2358                           ;tela3.c: 39: tempo(20000 / 100);
  2359  000E48  0EC8               	movlw	200
  2360  000E4A  EC5F  F009         	call	_tempo
  2361                           
  2362                           ;tela3.c: 40: tempo(20000 / 100);
  2363  000E4E  0EC8               	movlw	200
  2364  000E50  EC5F  F009         	call	_tempo
  2365                           
  2366                           ;tela3.c: 41: pwmSet1(0);
  2367  000E54  0E00               	movlw	0
  2368  000E56  EC4C  F008         	call	_pwmSet1
  2369  000E5A                     l2062:
  2370                           
  2371                           ;tela3.c: 43: ssdUpdate();
  2372  000E5A  ECAF  F004         	call	_ssdUpdate	;wreg free
  2373                           
  2374                           ;tela3.c: 44: lcdCommand(0XC0);
  2375  000E5E  0EC0               	movlw	192
  2376  000E60  EC82  F008         	call	_lcdCommand
  2377                           
  2378                           ;tela3.c: 45: for (i = 0; i < 13; i++) {
  2379  000E64  0E00               	movlw	0
  2380  000E66  6E46               	movwf	Tela3@i^0,c
  2381  000E68                     l2072:
  2382                           
  2383                           ;tela3.c: 46: lcdData(msg2[i]);
  2384  000E68  5046               	movf	Tela3@i^0,w,c
  2385  000E6A  0F2D               	addlw	low Tela3@msg2
  2386  000E6C  6ED9               	movwf	fsr2l,c
  2387  000E6E  6ADA               	clrf	fsr2h,c
  2388  000E70  50DF               	movf	indf2,w,c
  2389  000E72  EC0C  F009         	call	_lcdData
  2390  000E76  2A46               	incf	Tela3@i^0,f,c
  2391  000E78  0E0C               	movlw	12
  2392  000E7A  6446               	cpfsgt	Tela3@i^0,c
  2393  000E7C  D7F5               	goto	l2072
  2394                           
  2395                           ;tela3.c: 47: };tela3.c: 48: lcdCommand(0x40);
  2396  000E7E  0E40               	movlw	64
  2397  000E80  EC82  F008         	call	_lcdCommand
  2398                           
  2399                           ;tela3.c: 49: char logo1[32] = {;tela3.c: 50: 0x01, 0x03, 0x03, 0x07, 0x07, 0x0F, 0x0F, 
      +                          0x1F,;tela3.c: 51: 0x10, 0x18, 0x18, 0x1C, 0x1C, 0x1E, 0x1E, 0x1F,;tela3.c: 52: 0x0F, 0x
      +                          0F, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00,;tela3.c: 53: 0x1E, 0x1E, 0x1C, 0x18, 0x00, 0x00,
      +                           0x00, 0x00;tela3.c: 54: };
  2400  000E84  EE21  F000         	lfsr	2,Tela3@F96
  2401  000E88  EE10  F00D         	lfsr	1,Tela3@logo1
  2402  000E8C  0E1F               	movlw	31
  2403  000E8E                     u1551:
  2404  000E8E  CFDB FFE3          	movff	plusw2,plusw1
  2405  000E92  06E8               	decf	wreg,f,c
  2406  000E94  E2FC               	bc	u1551
  2407                           
  2408                           ;tela3.c: 55: for (i = 0; i < 32; i++)
  2409  000E96  0E00               	movlw	0
  2410  000E98  6E46               	movwf	Tela3@i^0,c
  2411  000E9A                     l2088:
  2412                           
  2413                           ;tela3.c: 56: lcdData(logo1[i]);
  2414  000E9A  5046               	movf	Tela3@i^0,w,c
  2415  000E9C  0F0D               	addlw	low Tela3@logo1
  2416  000E9E  6ED9               	movwf	fsr2l,c
  2417  000EA0  6ADA               	clrf	fsr2h,c
  2418  000EA2  50DF               	movf	indf2,w,c
  2419  000EA4  EC0C  F009         	call	_lcdData
  2420  000EA8  2A46               	incf	Tela3@i^0,f,c
  2421  000EAA  0E1F               	movlw	31
  2422  000EAC  6446               	cpfsgt	Tela3@i^0,c
  2423  000EAE  D7F5               	goto	l2088
  2424                           
  2425                           ;tela3.c: 57: lcdCommand(0x90);
  2426  000EB0  0E90               	movlw	144
  2427  000EB2  EC82  F008         	call	_lcdCommand
  2428                           
  2429                           ;tela3.c: 58: lcdData(0);
  2430  000EB6  0E00               	movlw	0
  2431  000EB8  EC0C  F009         	call	_lcdData
  2432                           
  2433                           ;tela3.c: 59: lcdData(1);
  2434  000EBC  0E01               	movlw	1
  2435  000EBE  EC0C  F009         	call	_lcdData
  2436                           
  2437                           ;tela3.c: 60: lcdCommand(0xD0);
  2438  000EC2  0ED0               	movlw	208
  2439  000EC4  EC82  F008         	call	_lcdCommand
  2440                           
  2441                           ;tela3.c: 61: lcdData(2);
  2442  000EC8  0E02               	movlw	2
  2443  000ECA  EC0C  F009         	call	_lcdData
  2444                           
  2445                           ;tela3.c: 62: lcdData(3);
  2446  000ECE  0E03               	movlw	3
  2447  000ED0  EC0C  F009         	call	_lcdData
  2448                           
  2449                           ;tela3.c: 63: }
  2450  000ED4  D7C2               	goto	l2062
  2451  000ED6                     __end_of_Tela3:
  2452                           	callstack 0
  2453                           
  2454 ;; *************** function _tempo *****************
  2455 ;; Defined at:
  2456 ;;		line 10 in file "tela3.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  v               1    wreg     unsigned char 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  v               1    7[COMRAM] unsigned char 
  2461 ;;  i               1   11[COMRAM] volatile unsigned char 
  2462 ;;  k               1   10[COMRAM] volatile unsigned char 
  2463 ;;  j               1    9[COMRAM] volatile unsigned char 
  2464 ;;  l               1    8[COMRAM] volatile unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2474 ;;      Params:         0       0       0       0       0       0       0
  2475 ;;      Locals:         5       0       0       0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0
  2477 ;;      Totals:         5       0       0       0       0       0       0
  2478 ;;Total ram usage:        5 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 2
  2481 ;; This function calls:
  2482 ;;		_ssdUpdate
  2483 ;; This function is called by:
  2484 ;;		_Tela3
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text11
  2489  0012BE                     __ptext11:
  2490                           	callstack 0
  2491  0012BE                     _tempo:
  2492                           	callstack 25
  2493                           
  2494                           ;incstack = 0
  2495                           ;tempo@v stored from wreg
  2496  0012BE  6E08               	movwf	tempo@v^0,c
  2497                           
  2498                           ;tela3.c: 12: volatile unsigned char j, k, i, l;;tela3.c: 14: for (l = 0; l < v; l++) {
  2499  0012C0  0E00               	movlw	0
  2500  0012C2  6E09               	movwf	tempo@l^0,c	;volatile
  2501  0012C4  D01A               	goto	l1958
  2502  0012C6                     l1922:
  2503                           
  2504                           ;tela3.c: 15: for (i = 0; i < 40; i++) {
  2505  0012C6  0E00               	movlw	0
  2506  0012C8  6E0C               	movwf	tempo@i^0,c	;volatile
  2507  0012CA  D011               	goto	l1952
  2508  0012CC                     l1928:
  2509                           
  2510                           ;tela3.c: 16: for (j = 0; j < 41; j++) {
  2511  0012CC  0E00               	movlw	0
  2512  0012CE  6E0A               	movwf	tempo@j^0,c	;volatile
  2513  0012D0  D008               	goto	l1946
  2514  0012D2                     l1934:
  2515                           
  2516                           ;tela3.c: 17: for (k = 0; k < 3; k++);
  2517  0012D2  0E00               	movlw	0
  2518  0012D4  6E0B               	movwf	tempo@k^0,c	;volatile
  2519  0012D6  D001               	goto	l1942
  2520  0012D8                     l1940:
  2521  0012D8  2A0B               	incf	tempo@k^0,f,c	;volatile
  2522  0012DA                     l1942:
  2523  0012DA  0E02               	movlw	2
  2524  0012DC  640B               	cpfsgt	tempo@k^0,c	;volatile
  2525  0012DE  D7FC               	goto	l1940
  2526  0012E0  2A0A               	incf	tempo@j^0,f,c	;volatile
  2527  0012E2                     l1946:
  2528  0012E2  0E28               	movlw	40
  2529  0012E4  640A               	cpfsgt	tempo@j^0,c	;volatile
  2530  0012E6  D7F5               	goto	l1934
  2531                           
  2532                           ;tela3.c: 18: };tela3.c: 19: ssdUpdate();
  2533  0012E8  ECAF  F004         	call	_ssdUpdate	;wreg free
  2534  0012EC  2A0C               	incf	tempo@i^0,f,c	;volatile
  2535  0012EE                     l1952:
  2536  0012EE  0E27               	movlw	39
  2537  0012F0  640C               	cpfsgt	tempo@i^0,c	;volatile
  2538  0012F2  D7EC               	goto	l1928
  2539                           
  2540                           ;tela3.c: 20: };tela3.c: 21: ssdUpdate();
  2541  0012F4  ECAF  F004         	call	_ssdUpdate	;wreg free
  2542  0012F8  2A09               	incf	tempo@l^0,f,c	;volatile
  2543  0012FA                     l1958:
  2544  0012FA  5008               	movf	tempo@v^0,w,c
  2545  0012FC  5C09               	subwf	tempo@l^0,w,c	;volatile
  2546  0012FE  B0D8               	btfsc	status,0,c
  2547  001300  0012               	return	
  2548  001302  D7E1               	goto	l1922
  2549  001304                     __end_of_tempo:
  2550                           	callstack 0
  2551                           
  2552 ;; *************** function _ssdUpdate *****************
  2553 ;; Defined at:
  2554 ;;		line 54 in file "ssd.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;		None
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2568 ;;      Params:         0       0       0       0       0       0       0
  2569 ;;      Locals:         0       0       0       0       0       0       0
  2570 ;;      Temps:          1       0       0       0       0       0       0
  2571 ;;      Totals:         1       0       0       0       0       0       0
  2572 ;;Total ram usage:        1 bytes
  2573 ;; Hardware stack levels used: 1
  2574 ;; Hardware stack levels required when called: 1
  2575 ;; This function calls:
  2576 ;;		_digitalWrite
  2577 ;; This function is called by:
  2578 ;;		_Tela1
  2579 ;;		_Tela2
  2580 ;;		_tempo
  2581 ;;		_Tela3
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text12
  2586  00095E                     __ptext12:
  2587                           	callstack 0
  2588  00095E                     _ssdUpdate:
  2589                           	callstack 28
  2590                           
  2591                           ;ssd.c: 58: TRISD= 0x00;
  2592                           
  2593                           ;incstack = 0
  2594  00095E  0E00               	movlw	0
  2595  000960  6E95               	movwf	149,c	;volatile
  2596                           
  2597                           ;ssd.c: 60: digitalWrite(PIN_A2,0);
  2598  000962  0E00               	movlw	0
  2599  000964  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2600  000966  0E02               	movlw	2
  2601  000968  6E01               	movwf	digitalWrite@pin^0,c
  2602  00096A  0E00               	movlw	0
  2603  00096C  6E04               	movwf	(digitalWrite@value+1)^0,c
  2604  00096E  0E00               	movlw	0
  2605  000970  6E03               	movwf	digitalWrite@value^0,c
  2606  000972  ECDC  F003         	call	_digitalWrite	;wreg free
  2607                           
  2608                           ;ssd.c: 61: digitalWrite(PIN_A3,0);
  2609  000976  0E00               	movlw	0
  2610  000978  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2611  00097A  0E03               	movlw	3
  2612  00097C  6E01               	movwf	digitalWrite@pin^0,c
  2613  00097E  0E00               	movlw	0
  2614  000980  6E04               	movwf	(digitalWrite@value+1)^0,c
  2615  000982  0E00               	movlw	0
  2616  000984  6E03               	movwf	digitalWrite@value^0,c
  2617  000986  ECDC  F003         	call	_digitalWrite	;wreg free
  2618                           
  2619                           ;ssd.c: 62: digitalWrite(PIN_A4,0);
  2620  00098A  0E00               	movlw	0
  2621  00098C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2622  00098E  0E04               	movlw	4
  2623  000990  6E01               	movwf	digitalWrite@pin^0,c
  2624  000992  0E00               	movlw	0
  2625  000994  6E04               	movwf	(digitalWrite@value+1)^0,c
  2626  000996  0E00               	movlw	0
  2627  000998  6E03               	movwf	digitalWrite@value^0,c
  2628  00099A  ECDC  F003         	call	_digitalWrite	;wreg free
  2629                           
  2630                           ;ssd.c: 63: digitalWrite(PIN_A5,0);
  2631  00099E  0E00               	movlw	0
  2632  0009A0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2633  0009A2  0E05               	movlw	5
  2634  0009A4  6E01               	movwf	digitalWrite@pin^0,c
  2635  0009A6  0E00               	movlw	0
  2636  0009A8  6E04               	movwf	(digitalWrite@value+1)^0,c
  2637  0009AA  0E00               	movlw	0
  2638  0009AC  6E03               	movwf	digitalWrite@value^0,c
  2639  0009AE  ECDC  F003         	call	_digitalWrite	;wreg free
  2640                           
  2641                           ;ssd.c: 66: PORTD = 0x00;
  2642  0009B2  0E00               	movlw	0
  2643  0009B4  6E83               	movwf	131,c	;volatile
  2644                           
  2645                           ;ssd.c: 69: switch (display)
  2646  0009B6  D05C               	goto	l1836
  2647  0009B8                     l1808:
  2648                           
  2649                           ;ssd.c: 72: PORTD = valor[v0];
  2650  0009B8  5077               	movf	_v0^0,w,c
  2651  0009BA  0F01               	addlw	low _valor@ssd$F163
  2652  0009BC  6E07               	movwf	??_ssdUpdate^0,c
  2653  0009BE  C007  FFF6         	movff	??_ssdUpdate,tblptrl
  2654  0009C2                     	if	1	;There is more than 1 active tblptr byte
  2655  0009C2  0E06               	movlw	high __smallconst
  2656  0009C4  6EF7               	movwf	tblptrh,c
  2657  0009C6                     	endif
  2658  0009C6                     	if	0	;tblptru may be non-zero
  2659  0009C6                     	endif
  2660  0009C6                     	if	0	;tblptru may be non-zero
  2661  0009C6                     	endif
  2662  0009C6  0008               	tblrd		*
  2663  0009C8  CFF5 FF83          	movff	tablat,3971	;volatile
  2664                           
  2665                           ;ssd.c: 73: digitalWrite(PIN_A2,1);
  2666  0009CC  0E00               	movlw	0
  2667  0009CE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2668  0009D0  0E02               	movlw	2
  2669  0009D2  6E01               	movwf	digitalWrite@pin^0,c
  2670  0009D4  0E00               	movlw	0
  2671  0009D6  6E04               	movwf	(digitalWrite@value+1)^0,c
  2672  0009D8  0E01               	movlw	1
  2673  0009DA  6E03               	movwf	digitalWrite@value^0,c
  2674  0009DC  ECDC  F003         	call	_digitalWrite	;wreg free
  2675                           
  2676                           ;ssd.c: 74: display = 1;
  2677  0009E0  0E01               	movlw	1
  2678  0009E2  6E78               	movwf	_display^0,c
  2679                           
  2680                           ;ssd.c: 75: break;
  2681  0009E4  0012               	return	
  2682  0009E6                     l1814:
  2683                           
  2684                           ;ssd.c: 78: PORTD = valor[v1];
  2685  0009E6  5076               	movf	_v1^0,w,c
  2686  0009E8  0F01               	addlw	low _valor@ssd$F163
  2687  0009EA  6E07               	movwf	??_ssdUpdate^0,c
  2688  0009EC  C007  FFF6         	movff	??_ssdUpdate,tblptrl
  2689  0009F0                     	if	1	;There is more than 1 active tblptr byte
  2690  0009F0  0E06               	movlw	high __smallconst
  2691  0009F2  6EF7               	movwf	tblptrh,c
  2692  0009F4                     	endif
  2693  0009F4                     	if	0	;tblptru may be non-zero
  2694  0009F4                     	endif
  2695  0009F4                     	if	0	;tblptru may be non-zero
  2696  0009F4                     	endif
  2697  0009F4  0008               	tblrd		*
  2698  0009F6  CFF5 FF83          	movff	tablat,3971	;volatile
  2699                           
  2700                           ;ssd.c: 79: digitalWrite(PIN_A3,1);
  2701  0009FA  0E00               	movlw	0
  2702  0009FC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2703  0009FE  0E03               	movlw	3
  2704  000A00  6E01               	movwf	digitalWrite@pin^0,c
  2705  000A02  0E00               	movlw	0
  2706  000A04  6E04               	movwf	(digitalWrite@value+1)^0,c
  2707  000A06  0E01               	movlw	1
  2708  000A08  6E03               	movwf	digitalWrite@value^0,c
  2709  000A0A  ECDC  F003         	call	_digitalWrite	;wreg free
  2710                           
  2711                           ;ssd.c: 80: display = 2;
  2712  000A0E  0E02               	movlw	2
  2713  000A10  6E78               	movwf	_display^0,c
  2714                           
  2715                           ;ssd.c: 81: break;
  2716  000A12  0012               	return	
  2717  000A14                     l1820:
  2718                           
  2719                           ;ssd.c: 84: PORTD = valor[v2];
  2720  000A14  5075               	movf	_v2^0,w,c
  2721  000A16  0F01               	addlw	low _valor@ssd$F163
  2722  000A18  6E07               	movwf	??_ssdUpdate^0,c
  2723  000A1A  C007  FFF6         	movff	??_ssdUpdate,tblptrl
  2724  000A1E                     	if	1	;There is more than 1 active tblptr byte
  2725  000A1E  0E06               	movlw	high __smallconst
  2726  000A20  6EF7               	movwf	tblptrh,c
  2727  000A22                     	endif
  2728  000A22                     	if	0	;tblptru may be non-zero
  2729  000A22                     	endif
  2730  000A22                     	if	0	;tblptru may be non-zero
  2731  000A22                     	endif
  2732  000A22  0008               	tblrd		*
  2733  000A24  CFF5 FF83          	movff	tablat,3971	;volatile
  2734                           
  2735                           ;ssd.c: 85: digitalWrite(PIN_A4,1);
  2736  000A28  0E00               	movlw	0
  2737  000A2A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2738  000A2C  0E04               	movlw	4
  2739  000A2E  6E01               	movwf	digitalWrite@pin^0,c
  2740  000A30  0E00               	movlw	0
  2741  000A32  6E04               	movwf	(digitalWrite@value+1)^0,c
  2742  000A34  0E01               	movlw	1
  2743  000A36  6E03               	movwf	digitalWrite@value^0,c
  2744  000A38  ECDC  F003         	call	_digitalWrite	;wreg free
  2745                           
  2746                           ;ssd.c: 86: display = 3;
  2747  000A3C  0E03               	movlw	3
  2748  000A3E  6E78               	movwf	_display^0,c
  2749                           
  2750                           ;ssd.c: 87: break;
  2751  000A40  0012               	return	
  2752  000A42                     l1826:
  2753                           
  2754                           ;ssd.c: 90: PORTD = valor[v3];
  2755  000A42  5074               	movf	_v3^0,w,c
  2756  000A44  0F01               	addlw	low _valor@ssd$F163
  2757  000A46  6E07               	movwf	??_ssdUpdate^0,c
  2758  000A48  C007  FFF6         	movff	??_ssdUpdate,tblptrl
  2759  000A4C                     	if	1	;There is more than 1 active tblptr byte
  2760  000A4C  0E06               	movlw	high __smallconst
  2761  000A4E  6EF7               	movwf	tblptrh,c
  2762  000A50                     	endif
  2763  000A50                     	if	0	;tblptru may be non-zero
  2764  000A50                     	endif
  2765  000A50                     	if	0	;tblptru may be non-zero
  2766  000A50                     	endif
  2767  000A50  0008               	tblrd		*
  2768  000A52  CFF5 FF83          	movff	tablat,3971	;volatile
  2769                           
  2770                           ;ssd.c: 91: digitalWrite(PIN_A5,1);
  2771  000A56  0E00               	movlw	0
  2772  000A58  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2773  000A5A  0E05               	movlw	5
  2774  000A5C  6E01               	movwf	digitalWrite@pin^0,c
  2775  000A5E  0E00               	movlw	0
  2776  000A60  6E04               	movwf	(digitalWrite@value+1)^0,c
  2777  000A62  0E01               	movlw	1
  2778  000A64  6E03               	movwf	digitalWrite@value^0,c
  2779  000A66  ECDC  F003         	call	_digitalWrite	;wreg free
  2780  000A6A                     l1830:
  2781                           
  2782                           ;ssd.c: 92: display = 0;
  2783  000A6A  0E00               	movlw	0
  2784  000A6C  6E78               	movwf	_display^0,c
  2785                           
  2786                           ;ssd.c: 93: break;
  2787  000A6E  0012               	return	
  2788  000A70                     l1836:
  2789  000A70  5078               	movf	_display^0,w,c
  2790                           
  2791                           ; Switch size 1, requested type "simple"
  2792                           ; Number of cases is 4, Range of values is 0 to 3
  2793                           ; switch strategies available:
  2794                           ; Name         Instructions Cycles
  2795                           ; simple_byte           13     7 (average)
  2796                           ;	Chosen strategy is simple_byte
  2797  000A72  0A00               	xorlw	0	; case 0
  2798  000A74  B4D8               	btfsc	status,2,c
  2799  000A76  D7A0               	goto	l1808
  2800  000A78  0A01               	xorlw	1	; case 1
  2801  000A7A  B4D8               	btfsc	status,2,c
  2802  000A7C  D7B4               	goto	l1814
  2803  000A7E  0A03               	xorlw	3	; case 2
  2804  000A80  B4D8               	btfsc	status,2,c
  2805  000A82  D7C8               	goto	l1820
  2806  000A84  0A01               	xorlw	1	; case 3
  2807  000A86  B4D8               	btfsc	status,2,c
  2808  000A88  D7DC               	goto	l1826
  2809  000A8A  D7EF               	goto	l1830
  2810  000A8C                     __end_of_ssdUpdate:
  2811                           	callstack 0
  2812                           
  2813 ;; *************** function _pwmSet1 *****************
  2814 ;; Defined at:
  2815 ;;		line 23 in file "pwm.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  porcento        1    wreg     unsigned char 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  porcento        1    9[COMRAM] unsigned char 
  2820 ;;  val             2   10[COMRAM] unsigned int 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2830 ;;      Params:         0       0       0       0       0       0       0
  2831 ;;      Locals:         3       0       0       0       0       0       0
  2832 ;;      Temps:          2       0       0       0       0       0       0
  2833 ;;      Totals:         5       0       0       0       0       0       0
  2834 ;;Total ram usage:        5 bytes
  2835 ;; Hardware stack levels used: 1
  2836 ;; Hardware stack levels required when called: 1
  2837 ;; This function calls:
  2838 ;;		___lwdiv
  2839 ;;		___wmul
  2840 ;; This function is called by:
  2841 ;;		_Tela3
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text13
  2846  001098                     __ptext13:
  2847                           	callstack 0
  2848  001098                     _pwmSet1:
  2849                           	callstack 26
  2850                           
  2851                           ;incstack = 0
  2852                           ;pwmSet1@porcento stored from wreg
  2853  001098  6E0A               	movwf	pwmSet1@porcento^0,c
  2854                           
  2855                           ;pwm.c: 30: unsigned int val = ((unsigned int)porcento) *((*(volatile __near unsigned ch
      +                          ar*)0xFCB)+1);
  2856  00109A  0E01               	movlw	1
  2857  00109C  24CB               	addwf	203,w,c	;volatile
  2858  00109E  6E01               	movwf	___wmul@multiplier^0,c
  2859  0010A0  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2860  0010A2  0E00               	movlw	0
  2861  0010A4  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2862  0010A6  C00A  F003         	movff	pwmSet1@porcento,___wmul@multiplicand
  2863  0010AA  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  2864  0010AC  ECAC  F009         	call	___wmul	;wreg free
  2865  0010B0  C001  F00B         	movff	?___wmul,pwmSet1@val
  2866  0010B4  C002  F00C         	movff	?___wmul+1,pwmSet1@val+1
  2867                           
  2868                           ;pwm.c: 31: val = val / 25;
  2869  0010B8  C00B  F001         	movff	pwmSet1@val,___lwdiv@dividend
  2870  0010BC  C00C  F002         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  2871  0010C0  0E00               	movlw	0
  2872  0010C2  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2873  0010C4  0E19               	movlw	25
  2874  0010C6  6E03               	movwf	___lwdiv@divisor^0,c
  2875  0010C8  EC36  F009         	call	___lwdiv	;wreg free
  2876  0010CC  C001  F00B         	movff	?___lwdiv,pwmSet1@val
  2877  0010D0  C002  F00C         	movff	?___lwdiv+1,pwmSet1@val+1
  2878                           
  2879                           ;pwm.c: 33: val &= 0x03ff;
  2880  0010D4  0EFF               	movlw	255
  2881  0010D6  160B               	andwf	pwmSet1@val^0,f,c
  2882  0010D8  0E03               	movlw	3
  2883  0010DA  160C               	andwf	(pwmSet1@val+1)^0,f,c
  2884                           
  2885                           ;pwm.c: 35: (*(volatile __near unsigned char*)0xFBE) = val >> 2;
  2886  0010DC  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  2887  0010E0  C00C  F009         	movff	pwmSet1@val+1,??_pwmSet1+1
  2888  0010E4  90D8               	bcf	status,0,c
  2889  0010E6  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  2890  0010E8  3208               	rrcf	??_pwmSet1^0,f,c
  2891  0010EA  90D8               	bcf	status,0,c
  2892  0010EC  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  2893  0010EE  3208               	rrcf	??_pwmSet1^0,f,c
  2894  0010F0  5008               	movf	??_pwmSet1^0,w,c
  2895  0010F2  6EBE               	movwf	190,c	;volatile
  2896                           
  2897                           ;pwm.c: 37: (*(volatile __near unsigned char*)0xFBD) |= (val & 0x0003) << 4;
  2898  0010F4  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  2899  0010F8  0E03               	movlw	3
  2900  0010FA  1608               	andwf	??_pwmSet1^0,f,c
  2901  0010FC  3808               	swapf	??_pwmSet1^0,w,c
  2902  0010FE  0BF0               	andlw	240
  2903  001100  12BD               	iorwf	189,f,c	;volatile
  2904  001102  0012               	return		;funcret
  2905  001104                     __end_of_pwmSet1:
  2906                           	callstack 0
  2907                           
  2908 ;; *************** function ___wmul *****************
  2909 ;; Defined at:
  2910 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  multiplier      2    0[COMRAM] unsigned int 
  2913 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  product         2    4[COMRAM] unsigned int 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  2    0[COMRAM] unsigned int 
  2918 ;; Registers used:
  2919 ;;		wreg, status,2, status,0, prodl, prodh
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2925 ;;      Params:         4       0       0       0       0       0       0
  2926 ;;      Locals:         2       0       0       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0       0       0
  2928 ;;      Totals:         6       0       0       0       0       0       0
  2929 ;;Total ram usage:        6 bytes
  2930 ;; Hardware stack levels used: 1
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_pwmSet1
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text14
  2939  001358                     __ptext14:
  2940                           	callstack 0
  2941  001358                     ___wmul:
  2942                           	callstack 26
  2943                           
  2944                           ;incstack = 0
  2945  001358  5001               	movf	___wmul@multiplier^0,w,c
  2946  00135A  0203               	mulwf	___wmul@multiplicand^0,c
  2947  00135C  CFF3 F005          	movff	prodl,___wmul@product
  2948  001360  CFF4 F006          	movff	prodh,___wmul@product+1
  2949  001364  5001               	movf	___wmul@multiplier^0,w,c
  2950  001366  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2951  001368  50F3               	movf	243,w,c
  2952  00136A  2606               	addwf	(___wmul@product+1)^0,f,c
  2953  00136C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2954  00136E  0203               	mulwf	___wmul@multiplicand^0,c
  2955  001370  50F3               	movf	243,w,c
  2956  001372  2606               	addwf	(___wmul@product+1)^0,f,c
  2957  001374  C005  F001         	movff	___wmul@product,?___wmul
  2958  001378  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2959  00137C  0012               	return		;funcret
  2960  00137E                     __end_of___wmul:
  2961                           	callstack 0
  2962                           
  2963 ;; *************** function ___lwdiv *****************
  2964 ;; Defined at:
  2965 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  dividend        2    0[COMRAM] unsigned int 
  2968 ;;  divisor         2    2[COMRAM] unsigned int 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  quotient        2    4[COMRAM] unsigned int 
  2971 ;;  counter         1    6[COMRAM] unsigned char 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  2    0[COMRAM] unsigned int 
  2974 ;; Registers used:
  2975 ;;		wreg, status,2, status,0
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2981 ;;      Params:         4       0       0       0       0       0       0
  2982 ;;      Locals:         3       0       0       0       0       0       0
  2983 ;;      Temps:          0       0       0       0       0       0       0
  2984 ;;      Totals:         7       0       0       0       0       0       0
  2985 ;;Total ram usage:        7 bytes
  2986 ;; Hardware stack levels used: 1
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_pwmSet1
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text15
  2995  00126C                     __ptext15:
  2996                           	callstack 0
  2997  00126C                     ___lwdiv:
  2998                           	callstack 26
  2999                           
  3000                           ;incstack = 0
  3001  00126C  0E00               	movlw	0
  3002  00126E  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3003  001270  0E00               	movlw	0
  3004  001272  6E05               	movwf	___lwdiv@quotient^0,c
  3005  001274  5003               	movf	___lwdiv@divisor^0,w,c
  3006  001276  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3007  001278  B4D8               	btfsc	status,2,c
  3008  00127A  D01C               	goto	l824
  3009  00127C  0E01               	movlw	1
  3010  00127E  6E07               	movwf	___lwdiv@counter^0,c
  3011  001280  D004               	goto	l1852
  3012  001282                     l1850:
  3013  001282  90D8               	bcf	status,0,c
  3014  001284  3603               	rlcf	___lwdiv@divisor^0,f,c
  3015  001286  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3016  001288  2A07               	incf	___lwdiv@counter^0,f,c
  3017  00128A                     l1852:
  3018  00128A  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3019  00128C  D7FA               	goto	l1850
  3020  00128E                     u1250:
  3021  00128E  90D8               	bcf	status,0,c
  3022  001290  3605               	rlcf	___lwdiv@quotient^0,f,c
  3023  001292  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3024  001294  5003               	movf	___lwdiv@divisor^0,w,c
  3025  001296  5C01               	subwf	___lwdiv@dividend^0,w,c
  3026  001298  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3027  00129A  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3028  00129C  A0D8               	btfss	status,0,c
  3029  00129E  D005               	goto	l1862
  3030  0012A0  5003               	movf	___lwdiv@divisor^0,w,c
  3031  0012A2  5E01               	subwf	___lwdiv@dividend^0,f,c
  3032  0012A4  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3033  0012A6  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3034  0012A8  8005               	bsf	___lwdiv@quotient^0,0,c
  3035  0012AA                     l1862:
  3036  0012AA  90D8               	bcf	status,0,c
  3037  0012AC  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3038  0012AE  3203               	rrcf	___lwdiv@divisor^0,f,c
  3039  0012B0  2E07               	decfsz	___lwdiv@counter^0,f,c
  3040  0012B2  D7ED               	goto	u1250
  3041  0012B4                     l824:
  3042  0012B4  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3043  0012B8  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3044  0012BC  0012               	return		;funcret
  3045  0012BE                     __end_of___lwdiv:
  3046                           	callstack 0
  3047                           
  3048 ;; *************** function _pwmInit *****************
  3049 ;; Defined at:
  3050 ;;		line 59 in file "pwm.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3064 ;;      Params:         0       0       0       0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0
  3067 ;;      Totals:         0       0       0       0       0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_Tela3
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text16
  3078  00137E                     __ptext16:
  3079                           	callstack 0
  3080  00137E                     _pwmInit:
  3081                           	callstack 27
  3082                           
  3083                           ;pwm.c: 61: (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  3084                           
  3085                           ;incstack = 0
  3086  00137E  9294               	bcf	148,1,c	;volatile
  3087                           
  3088                           ;pwm.c: 62: (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
  3089  001380  9494               	bcf	148,2,c	;volatile
  3090                           
  3091                           ;pwm.c: 64: (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
  3092  001382  0E03               	movlw	3
  3093  001384  12CA               	iorwf	202,f,c	;volatile
  3094                           
  3095                           ;pwm.c: 65: (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
  3096  001386  84CA               	bsf	202,2,c	;volatile
  3097                           
  3098                           ;pwm.c: 68: (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
  3099  001388  0E0C               	movlw	12
  3100  00138A  12BD               	iorwf	189,f,c	;volatile
  3101                           
  3102                           ;pwm.c: 69: (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
  3103  00138C  0E0C               	movlw	12
  3104  00138E  12BA               	iorwf	186,f,c	;volatile
  3105  001390  0012               	return		;funcret
  3106  001392                     __end_of_pwmInit:
  3107                           	callstack 0
  3108                           
  3109 ;; *************** function _lcdData *****************
  3110 ;; Defined at:
  3111 ;;		line 74 in file "lcd.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  valor           1    wreg     unsigned char 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;  valor           1    6[COMRAM] unsigned char 
  3116 ;;  old_D           1    7[COMRAM] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3126 ;;      Params:         0       0       0       0       0       0       0
  3127 ;;      Locals:         2       0       0       0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0       0       0
  3129 ;;      Totals:         2       0       0       0       0       0       0
  3130 ;;Total ram usage:        2 bytes
  3131 ;; Hardware stack levels used: 1
  3132 ;; Hardware stack levels required when called: 1
  3133 ;; This function calls:
  3134 ;;		_Delay40us
  3135 ;;		_digitalWrite
  3136 ;; This function is called by:
  3137 ;;		_main
  3138 ;;		_Tela1
  3139 ;;		_Tela2
  3140 ;;		_Tela3
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text17
  3145  001218                     __ptext17:
  3146                           	callstack 0
  3147  001218                     _lcdData:
  3148                           	callstack 29
  3149                           
  3150                           ;incstack = 0
  3151                           ;lcdData@valor stored from wreg
  3152  001218  6E07               	movwf	lcdData@valor^0,c
  3153                           
  3154                           ;lcd.c: 77: unsigned char old_D;;lcd.c: 78: old_D = PORTD;
  3155  00121A  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  3156                           
  3157                           ;lcd.c: 80: TRISD = 0x00;
  3158  00121E  0E00               	movlw	0
  3159  001220  6E95               	movwf	149,c	;volatile
  3160                           
  3161                           ;lcd.c: 81: digitalWrite(PIN_E2, 1);
  3162  001222  0E00               	movlw	0
  3163  001224  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3164  001226  0E22               	movlw	34
  3165  001228  6E01               	movwf	digitalWrite@pin^0,c
  3166  00122A  0E00               	movlw	0
  3167  00122C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3168  00122E  0E01               	movlw	1
  3169  001230  6E03               	movwf	digitalWrite@value^0,c
  3170  001232  ECDC  F003         	call	_digitalWrite	;wreg free
  3171                           
  3172                           ;lcd.c: 83: PORTD = valor;
  3173  001236  C007  FF83         	movff	lcdData@valor,3971	;volatile
  3174                           
  3175                           ;lcd.c: 85: digitalWrite(PIN_E1, 1);
  3176  00123A  0E00               	movlw	0
  3177  00123C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3178  00123E  0E21               	movlw	33
  3179  001240  6E01               	movwf	digitalWrite@pin^0,c
  3180  001242  0E00               	movlw	0
  3181  001244  6E04               	movwf	(digitalWrite@value+1)^0,c
  3182  001246  0E01               	movlw	1
  3183  001248  6E03               	movwf	digitalWrite@value^0,c
  3184  00124A  ECDC  F003         	call	_digitalWrite	;wreg free
  3185                           
  3186                           ;lcd.c: 86: digitalWrite(PIN_E1, 0);
  3187  00124E  0E00               	movlw	0
  3188  001250  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3189  001252  0E21               	movlw	33
  3190  001254  6E01               	movwf	digitalWrite@pin^0,c
  3191  001256  0E00               	movlw	0
  3192  001258  6E04               	movwf	(digitalWrite@value+1)^0,c
  3193  00125A  0E00               	movlw	0
  3194  00125C  6E03               	movwf	digitalWrite@value^0,c
  3195  00125E  ECDC  F003         	call	_digitalWrite	;wreg free
  3196                           
  3197                           ;lcd.c: 88: PORTD= old_D;
  3198  001262  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  3199                           
  3200                           ;lcd.c: 90: Delay40us();
  3201  001266  ECD2  F009         	call	_Delay40us	;wreg free
  3202  00126A  0012               	return		;funcret
  3203  00126C                     __end_of_lcdData:
  3204                           	callstack 0
  3205                           
  3206 ;; *************** function _lcdCommand *****************
  3207 ;; Defined at:
  3208 ;;		line 48 in file "lcd.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  cmd             1    wreg     unsigned char 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  cmd             1    7[COMRAM] unsigned char 
  3213 ;;  old_D           1    6[COMRAM] unsigned char 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3223 ;;      Params:         0       0       0       0       0       0       0
  3224 ;;      Locals:         2       0       0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0
  3226 ;;      Totals:         2       0       0       0       0       0       0
  3227 ;;Total ram usage:        2 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; Hardware stack levels required when called: 2
  3230 ;; This function calls:
  3231 ;;		_Delay2ms
  3232 ;;		_Delay40us
  3233 ;;		_digitalWrite
  3234 ;; This function is called by:
  3235 ;;		_lcdInit
  3236 ;;		_main
  3237 ;;		_Tela1
  3238 ;;		_Tela2
  3239 ;;		_Tela3
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text18
  3244  001104                     __ptext18:
  3245                           	callstack 0
  3246  001104                     _lcdCommand:
  3247                           	callstack 27
  3248                           
  3249                           ;incstack = 0
  3250                           ;lcdCommand@cmd stored from wreg
  3251  001104  6E08               	movwf	lcdCommand@cmd^0,c
  3252                           
  3253                           ;lcd.c: 50: unsigned char old_D;;lcd.c: 51: old_D = PORTD;
  3254  001106  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  3255                           
  3256                           ;lcd.c: 54: TRISD = 0x00;
  3257  00110A  0E00               	movlw	0
  3258  00110C  6E95               	movwf	149,c	;volatile
  3259                           
  3260                           ;lcd.c: 56: digitalWrite(PIN_E2, 0);
  3261  00110E  0E00               	movlw	0
  3262  001110  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3263  001112  0E22               	movlw	34
  3264  001114  6E01               	movwf	digitalWrite@pin^0,c
  3265  001116  0E00               	movlw	0
  3266  001118  6E04               	movwf	(digitalWrite@value+1)^0,c
  3267  00111A  0E00               	movlw	0
  3268  00111C  6E03               	movwf	digitalWrite@value^0,c
  3269  00111E  ECDC  F003         	call	_digitalWrite	;wreg free
  3270                           
  3271                           ;lcd.c: 57: PORTD = cmd;
  3272  001122  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  3273                           
  3274                           ;lcd.c: 59: digitalWrite(PIN_E1, 1);
  3275  001126  0E00               	movlw	0
  3276  001128  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3277  00112A  0E21               	movlw	33
  3278  00112C  6E01               	movwf	digitalWrite@pin^0,c
  3279  00112E  0E00               	movlw	0
  3280  001130  6E04               	movwf	(digitalWrite@value+1)^0,c
  3281  001132  0E01               	movlw	1
  3282  001134  6E03               	movwf	digitalWrite@value^0,c
  3283  001136  ECDC  F003         	call	_digitalWrite	;wreg free
  3284                           
  3285                           ;lcd.c: 60: digitalWrite(PIN_E1, 0);
  3286  00113A  0E00               	movlw	0
  3287  00113C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3288  00113E  0E21               	movlw	33
  3289  001140  6E01               	movwf	digitalWrite@pin^0,c
  3290  001142  0E00               	movlw	0
  3291  001144  6E04               	movwf	(digitalWrite@value+1)^0,c
  3292  001146  0E00               	movlw	0
  3293  001148  6E03               	movwf	digitalWrite@value^0,c
  3294  00114A  ECDC  F003         	call	_digitalWrite	;wreg free
  3295                           
  3296                           ;lcd.c: 63: PORTD= old_D;
  3297  00114E  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  3298                           
  3299                           ;lcd.c: 65: if((cmd == 0x02)||(cmd == 0x01)){
  3300  001152  0E02               	movlw	2
  3301  001154  1808               	xorwf	lcdCommand@cmd^0,w,c
  3302  001156  B4D8               	btfsc	status,2,c
  3303  001158  D003               	goto	u1280
  3304  00115A  0408               	decf	lcdCommand@cmd^0,w,c
  3305  00115C  A4D8               	btfss	status,2,c
  3306  00115E  D003               	goto	l1886
  3307  001160                     u1280:
  3308                           
  3309                           ;lcd.c: 66: Delay2ms();
  3310  001160  ECC9  F009         	call	_Delay2ms	;wreg free
  3311                           
  3312                           ;lcd.c: 67: }else{
  3313  001164  0012               	return	
  3314  001166                     l1886:
  3315                           
  3316                           ;lcd.c: 68: Delay40us();
  3317  001166  ECD2  F009         	call	_Delay40us	;wreg free
  3318  00116A  0012               	return		;funcret
  3319  00116C                     __end_of_lcdCommand:
  3320                           	callstack 0
  3321                           
  3322 ;; *************** function _digitalWrite *****************
  3323 ;; Defined at:
  3324 ;;		line 14 in file "io.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  pin             2    0[COMRAM] int 
  3327 ;;  value           2    2[COMRAM] int 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;		None
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      void 
  3332 ;; Registers used:
  3333 ;;		wreg, status,2, status,0
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3339 ;;      Params:         4       0       0       0       0       0       0
  3340 ;;      Locals:         0       0       0       0       0       0       0
  3341 ;;      Temps:          2       0       0       0       0       0       0
  3342 ;;      Totals:         6       0       0       0       0       0       0
  3343 ;;Total ram usage:        6 bytes
  3344 ;; Hardware stack levels used: 1
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_lcdCommand
  3349 ;;		_lcdData
  3350 ;;		_ssdUpdate
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text19
  3355  0007B8                     __ptext19:
  3356                           	callstack 0
  3357  0007B8                     _digitalWrite:
  3358                           	callstack 28
  3359                           
  3360                           ;io.c: 16: if(pin <8){
  3361                           
  3362                           ;incstack = 0
  3363  0007B8  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3364  0007BA  D006               	goto	u1020
  3365  0007BC  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3366  0007BE  E123               	bnz	l1744
  3367  0007C0  0E08               	movlw	8
  3368  0007C2  5C01               	subwf	digitalWrite@pin^0,w,c
  3369  0007C4  B0D8               	btfsc	status,0,c
  3370  0007C6  D01F               	goto	l1744
  3371  0007C8                     u1020:
  3372                           
  3373                           ;io.c: 17: if (value){ ((PORTA) |= (1<<(pin)));}
  3374  0007C8  5003               	movf	digitalWrite@value^0,w,c
  3375  0007CA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3376  0007CC  B4D8               	btfsc	status,2,c
  3377  0007CE  D00D               	goto	l1742
  3378  0007D0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3379  0007D4  0E01               	movlw	1
  3380  0007D6  6E06               	movwf	(??_digitalWrite+1)^0,c
  3381  0007D8  2A05               	incf	??_digitalWrite^0,f,c
  3382  0007DA  D002               	goto	u1044
  3383  0007DC                     u1045:
  3384  0007DC  90D8               	bcf	status,0,c
  3385  0007DE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3386  0007E0                     u1044:
  3387  0007E0  2E05               	decfsz	??_digitalWrite^0,f,c
  3388  0007E2  D7FC               	goto	u1045
  3389  0007E4  5006               	movf	(??_digitalWrite+1)^0,w,c
  3390  0007E6  1280               	iorwf	128,f,c	;volatile
  3391  0007E8  0012               	return	
  3392  0007EA                     l1742:
  3393                           
  3394                           ;io.c: 18: else{ ((PORTA) &= ~(1<<(pin)));}
  3395  0007EA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3396  0007EE  0E01               	movlw	1
  3397  0007F0  6E06               	movwf	(??_digitalWrite+1)^0,c
  3398  0007F2  2A05               	incf	??_digitalWrite^0,f,c
  3399  0007F4  D002               	goto	u1054
  3400  0007F6                     u1055:
  3401  0007F6  90D8               	bcf	status,0,c
  3402  0007F8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3403  0007FA                     u1054:
  3404  0007FA  2E05               	decfsz	??_digitalWrite^0,f,c
  3405  0007FC  D7FC               	goto	u1055
  3406  0007FE  5006               	movf	(??_digitalWrite+1)^0,w,c
  3407  000800  0AFF               	xorlw	255
  3408  000802  1680               	andwf	128,f,c	;volatile
  3409  000804  0012               	return	
  3410  000806                     l1744:
  3411  000806  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3412  000808  D006               	goto	u1060
  3413  00080A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3414  00080C  E127               	bnz	l1752
  3415  00080E  0E10               	movlw	16
  3416  000810  5C01               	subwf	digitalWrite@pin^0,w,c
  3417  000812  B0D8               	btfsc	status,0,c
  3418  000814  D023               	goto	l1752
  3419  000816                     u1060:
  3420                           
  3421                           ;io.c: 20: pin -=8;
  3422  000816  0EF8               	movlw	248
  3423  000818  2601               	addwf	digitalWrite@pin^0,f,c
  3424  00081A  0EFF               	movlw	255
  3425  00081C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3426                           
  3427                           ;io.c: 21: if (value){ ((PORTB) |= (1<<(pin)));}
  3428  00081E  5003               	movf	digitalWrite@value^0,w,c
  3429  000820  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3430  000822  B4D8               	btfsc	status,2,c
  3431  000824  D00D               	goto	l1750
  3432  000826  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3433  00082A  0E01               	movlw	1
  3434  00082C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3435  00082E  2A05               	incf	??_digitalWrite^0,f,c
  3436  000830  D002               	goto	u1084
  3437  000832                     u1085:
  3438  000832  90D8               	bcf	status,0,c
  3439  000834  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3440  000836                     u1084:
  3441  000836  2E05               	decfsz	??_digitalWrite^0,f,c
  3442  000838  D7FC               	goto	u1085
  3443  00083A  5006               	movf	(??_digitalWrite+1)^0,w,c
  3444  00083C  1281               	iorwf	129,f,c	;volatile
  3445  00083E  0012               	return	
  3446  000840                     l1750:
  3447                           
  3448                           ;io.c: 22: else{ ((PORTB) &= ~(1<<(pin)));}
  3449  000840  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3450  000844  0E01               	movlw	1
  3451  000846  6E06               	movwf	(??_digitalWrite+1)^0,c
  3452  000848  2A05               	incf	??_digitalWrite^0,f,c
  3453  00084A  D002               	goto	u1094
  3454  00084C                     u1095:
  3455  00084C  90D8               	bcf	status,0,c
  3456  00084E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3457  000850                     u1094:
  3458  000850  2E05               	decfsz	??_digitalWrite^0,f,c
  3459  000852  D7FC               	goto	u1095
  3460  000854  5006               	movf	(??_digitalWrite+1)^0,w,c
  3461  000856  0AFF               	xorlw	255
  3462  000858  1681               	andwf	129,f,c	;volatile
  3463  00085A  0012               	return	
  3464  00085C                     l1752:
  3465  00085C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3466  00085E  D006               	goto	u1100
  3467  000860  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3468  000862  E127               	bnz	l1760
  3469  000864  0E18               	movlw	24
  3470  000866  5C01               	subwf	digitalWrite@pin^0,w,c
  3471  000868  B0D8               	btfsc	status,0,c
  3472  00086A  D023               	goto	l1760
  3473  00086C                     u1100:
  3474                           
  3475                           ;io.c: 24: pin -=16;
  3476  00086C  0EF0               	movlw	240
  3477  00086E  2601               	addwf	digitalWrite@pin^0,f,c
  3478  000870  0EFF               	movlw	255
  3479  000872  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3480                           
  3481                           ;io.c: 25: if (value){ ((PORTC) |= (1<<(pin)));}
  3482  000874  5003               	movf	digitalWrite@value^0,w,c
  3483  000876  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3484  000878  B4D8               	btfsc	status,2,c
  3485  00087A  D00D               	goto	l1758
  3486  00087C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3487  000880  0E01               	movlw	1
  3488  000882  6E06               	movwf	(??_digitalWrite+1)^0,c
  3489  000884  2A05               	incf	??_digitalWrite^0,f,c
  3490  000886  D002               	goto	u1124
  3491  000888                     u1125:
  3492  000888  90D8               	bcf	status,0,c
  3493  00088A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3494  00088C                     u1124:
  3495  00088C  2E05               	decfsz	??_digitalWrite^0,f,c
  3496  00088E  D7FC               	goto	u1125
  3497  000890  5006               	movf	(??_digitalWrite+1)^0,w,c
  3498  000892  1282               	iorwf	130,f,c	;volatile
  3499  000894  0012               	return	
  3500  000896                     l1758:
  3501                           
  3502                           ;io.c: 26: else{ ((PORTC) &= ~(1<<(pin)));}
  3503  000896  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3504  00089A  0E01               	movlw	1
  3505  00089C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3506  00089E  2A05               	incf	??_digitalWrite^0,f,c
  3507  0008A0  D002               	goto	u1134
  3508  0008A2                     u1135:
  3509  0008A2  90D8               	bcf	status,0,c
  3510  0008A4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3511  0008A6                     u1134:
  3512  0008A6  2E05               	decfsz	??_digitalWrite^0,f,c
  3513  0008A8  D7FC               	goto	u1135
  3514  0008AA  5006               	movf	(??_digitalWrite+1)^0,w,c
  3515  0008AC  0AFF               	xorlw	255
  3516  0008AE  1682               	andwf	130,f,c	;volatile
  3517  0008B0  0012               	return	
  3518  0008B2                     l1760:
  3519  0008B2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3520  0008B4  D006               	goto	u1140
  3521  0008B6  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3522  0008B8  E127               	bnz	l1768
  3523  0008BA  0E20               	movlw	32
  3524  0008BC  5C01               	subwf	digitalWrite@pin^0,w,c
  3525  0008BE  B0D8               	btfsc	status,0,c
  3526  0008C0  D023               	goto	l1768
  3527  0008C2                     u1140:
  3528                           
  3529                           ;io.c: 28: pin -=24;
  3530  0008C2  0EE8               	movlw	232
  3531  0008C4  2601               	addwf	digitalWrite@pin^0,f,c
  3532  0008C6  0EFF               	movlw	255
  3533  0008C8  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3534                           
  3535                           ;io.c: 29: if (value){ ((PORTD) |= (1<<(pin)));}
  3536  0008CA  5003               	movf	digitalWrite@value^0,w,c
  3537  0008CC  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3538  0008CE  B4D8               	btfsc	status,2,c
  3539  0008D0  D00D               	goto	l1766
  3540  0008D2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3541  0008D6  0E01               	movlw	1
  3542  0008D8  6E06               	movwf	(??_digitalWrite+1)^0,c
  3543  0008DA  2A05               	incf	??_digitalWrite^0,f,c
  3544  0008DC  D002               	goto	u1164
  3545  0008DE                     u1165:
  3546  0008DE  90D8               	bcf	status,0,c
  3547  0008E0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3548  0008E2                     u1164:
  3549  0008E2  2E05               	decfsz	??_digitalWrite^0,f,c
  3550  0008E4  D7FC               	goto	u1165
  3551  0008E6  5006               	movf	(??_digitalWrite+1)^0,w,c
  3552  0008E8  1283               	iorwf	131,f,c	;volatile
  3553  0008EA  0012               	return	
  3554  0008EC                     l1766:
  3555                           
  3556                           ;io.c: 30: else{ ((PORTD) &= ~(1<<(pin)));}
  3557  0008EC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3558  0008F0  0E01               	movlw	1
  3559  0008F2  6E06               	movwf	(??_digitalWrite+1)^0,c
  3560  0008F4  2A05               	incf	??_digitalWrite^0,f,c
  3561  0008F6  D002               	goto	u1174
  3562  0008F8                     u1175:
  3563  0008F8  90D8               	bcf	status,0,c
  3564  0008FA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3565  0008FC                     u1174:
  3566  0008FC  2E05               	decfsz	??_digitalWrite^0,f,c
  3567  0008FE  D7FC               	goto	u1175
  3568  000900  5006               	movf	(??_digitalWrite+1)^0,w,c
  3569  000902  0AFF               	xorlw	255
  3570  000904  1683               	andwf	131,f,c	;volatile
  3571  000906  0012               	return	
  3572  000908                     l1768:
  3573  000908  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3574  00090A  D006               	goto	u1180
  3575  00090C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3576  00090E  E126               	bnz	l42
  3577  000910  0E28               	movlw	40
  3578  000912  5C01               	subwf	digitalWrite@pin^0,w,c
  3579  000914  B0D8               	btfsc	status,0,c
  3580  000916  0012               	return	
  3581  000918                     u1180:
  3582                           
  3583                           ;io.c: 32: pin -=32;
  3584  000918  0EE0               	movlw	224
  3585  00091A  2601               	addwf	digitalWrite@pin^0,f,c
  3586  00091C  0EFF               	movlw	255
  3587  00091E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3588                           
  3589                           ;io.c: 33: if (value){ ((PORTE) |= (1<<(pin)));}
  3590  000920  5003               	movf	digitalWrite@value^0,w,c
  3591  000922  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3592  000924  B4D8               	btfsc	status,2,c
  3593  000926  D00D               	goto	l1774
  3594  000928  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3595  00092C  0E01               	movlw	1
  3596  00092E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3597  000930  2A05               	incf	??_digitalWrite^0,f,c
  3598  000932  D002               	goto	u1204
  3599  000934                     u1205:
  3600  000934  90D8               	bcf	status,0,c
  3601  000936  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3602  000938                     u1204:
  3603  000938  2E05               	decfsz	??_digitalWrite^0,f,c
  3604  00093A  D7FC               	goto	u1205
  3605  00093C  5006               	movf	(??_digitalWrite+1)^0,w,c
  3606  00093E  1284               	iorwf	132,f,c	;volatile
  3607  000940  0012               	return	
  3608  000942                     l1774:
  3609                           
  3610                           ;io.c: 34: else{ ((PORTE) &= ~(1<<(pin)));}
  3611  000942  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3612  000946  0E01               	movlw	1
  3613  000948  6E06               	movwf	(??_digitalWrite+1)^0,c
  3614  00094A  2A05               	incf	??_digitalWrite^0,f,c
  3615  00094C  D002               	goto	u1214
  3616  00094E                     u1215:
  3617  00094E  90D8               	bcf	status,0,c
  3618  000950  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3619  000952                     u1214:
  3620  000952  2E05               	decfsz	??_digitalWrite^0,f,c
  3621  000954  D7FC               	goto	u1215
  3622  000956  5006               	movf	(??_digitalWrite+1)^0,w,c
  3623  000958  0AFF               	xorlw	255
  3624  00095A  1684               	andwf	132,f,c	;volatile
  3625  00095C                     l42:
  3626  00095C  0012               	return		;funcret
  3627  00095E                     __end_of_digitalWrite:
  3628                           	callstack 0
  3629                           
  3630 ;; *************** function _Delay2ms *****************
  3631 ;; Defined at:
  3632 ;;		line 37 in file "lcd.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  i               1    1[COMRAM] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3646 ;;      Params:         0       0       0       0       0       0       0
  3647 ;;      Locals:         1       0       0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0
  3649 ;;      Totals:         1       0       0       0       0       0       0
  3650 ;;Total ram usage:        1 bytes
  3651 ;; Hardware stack levels used: 1
  3652 ;; Hardware stack levels required when called: 1
  3653 ;; This function calls:
  3654 ;;		_Delay40us
  3655 ;; This function is called by:
  3656 ;;		_lcdCommand
  3657 ;;		_lcdInit
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text20
  3662  001392                     __ptext20:
  3663                           	callstack 0
  3664  001392                     _Delay2ms:
  3665                           	callstack 27
  3666                           
  3667                           ;lcd.c: 39: unsigned char i;;lcd.c: 40: for(i=0; i < 50; i++)
  3668                           
  3669                           ;incstack = 0
  3670  001392  0E00               	movlw	0
  3671  001394  6E02               	movwf	Delay2ms@i^0,c
  3672  001396                     l1792:
  3673                           
  3674                           ;lcd.c: 41: {;lcd.c: 42: Delay40us();
  3675  001396  ECD2  F009         	call	_Delay40us	;wreg free
  3676  00139A  2A02               	incf	Delay2ms@i^0,f,c
  3677  00139C  0E31               	movlw	49
  3678  00139E  6402               	cpfsgt	Delay2ms@i^0,c
  3679  0013A0  D7FA               	goto	l1792
  3680  0013A2  0012               	return	
  3681  0013A4                     __end_of_Delay2ms:
  3682                           	callstack 0
  3683                           
  3684 ;; *************** function _Delay40us *****************
  3685 ;; Defined at:
  3686 ;;		line 31 in file "lcd.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;  i               1    0[COMRAM] unsigned char 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, status,2, status,0
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3700 ;;      Params:         0       0       0       0       0       0       0
  3701 ;;      Locals:         1       0       0       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0       0       0
  3703 ;;      Totals:         1       0       0       0       0       0       0
  3704 ;;Total ram usage:        1 bytes
  3705 ;; Hardware stack levels used: 1
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_Delay2ms
  3710 ;;		_lcdCommand
  3711 ;;		_lcdData
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text21
  3716  0013A4                     __ptext21:
  3717                           	callstack 0
  3718  0013A4                     _Delay40us:
  3719                           	callstack 28
  3720                           
  3721                           ;lcd.c: 33: unsigned char i;;lcd.c: 34: for(i=0; i < 25; i++);
  3722                           
  3723                           ;incstack = 0
  3724  0013A4  0E00               	movlw	0
  3725  0013A6  6E01               	movwf	Delay40us@i^0,c
  3726  0013A8                     l1782:
  3727  0013A8  2A01               	incf	Delay40us@i^0,f,c
  3728  0013AA  0E18               	movlw	24
  3729  0013AC  6401               	cpfsgt	Delay40us@i^0,c
  3730  0013AE  D7FC               	goto	l1782
  3731  0013B0  0012               	return	
  3732  0013B2                     __end_of_Delay40us:
  3733                           	callstack 0
  3734                           
  3735                           	psect	rparam
  3736  0000                     
  3737                           	psect	idloc
  3738                           
  3739                           ;Config register IDLOC0 @ 0x200000
  3740                           ;	unspecified, using default values
  3741  200000                     	org	2097152
  3742  200000  FF                 	db	255
  3743                           
  3744                           ;Config register IDLOC1 @ 0x200001
  3745                           ;	unspecified, using default values
  3746  200001                     	org	2097153
  3747  200001  FF                 	db	255
  3748                           
  3749                           ;Config register IDLOC2 @ 0x200002
  3750                           ;	unspecified, using default values
  3751  200002                     	org	2097154
  3752  200002  FF                 	db	255
  3753                           
  3754                           ;Config register IDLOC3 @ 0x200003
  3755                           ;	unspecified, using default values
  3756  200003                     	org	2097155
  3757  200003  FF                 	db	255
  3758                           
  3759                           ;Config register IDLOC4 @ 0x200004
  3760                           ;	unspecified, using default values
  3761  200004                     	org	2097156
  3762  200004  FF                 	db	255
  3763                           
  3764                           ;Config register IDLOC5 @ 0x200005
  3765                           ;	unspecified, using default values
  3766  200005                     	org	2097157
  3767  200005  FF                 	db	255
  3768                           
  3769                           ;Config register IDLOC6 @ 0x200006
  3770                           ;	unspecified, using default values
  3771  200006                     	org	2097158
  3772  200006  FF                 	db	255
  3773                           
  3774                           ;Config register IDLOC7 @ 0x200007
  3775                           ;	unspecified, using default values
  3776  200007                     	org	2097159
  3777  200007  FF                 	db	255
  3778                           
  3779                           	psect	config
  3780                           
  3781                           ; Padding undefined space
  3782  300000                     	org	3145728
  3783  300000  FF                 	db	255
  3784                           
  3785                           ;Config register CONFIG1H @ 0x300001
  3786                           ;	Oscillator Selection bits
  3787                           ;	OSC = HS, HS oscillator
  3788                           ;	Fail-Safe Clock Monitor Enable bit
  3789                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3790                           ;	Internal/External Oscillator Switchover bit
  3791                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3792  300001                     	org	3145729
  3793  300001  02                 	db	2
  3794                           
  3795                           ;Config register CONFIG2L @ 0x300002
  3796                           ;	Power-up Timer Enable bit
  3797                           ;	PWRT = OFF, PWRT disabled
  3798                           ;	Brown-out Reset Enable bits
  3799                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3800                           ;	Brown Out Reset Voltage bits
  3801                           ;	BORV = 2, 
  3802  300002                     	org	3145730
  3803  300002  11                 	db	17
  3804                           
  3805                           ;Config register CONFIG2H @ 0x300003
  3806                           ;	Watchdog Timer Enable bit
  3807                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3808                           ;	Watchdog Timer Postscale Select bits
  3809                           ;	WDTPS = 1, 1:1
  3810  300003                     	org	3145731
  3811  300003  00                 	db	0
  3812                           
  3813                           ; Padding undefined space
  3814  300004                     	org	3145732
  3815  300004  FF                 	db	255
  3816                           
  3817                           ;Config register CONFIG3H @ 0x300005
  3818                           ;	CCP2 MUX bit
  3819                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3820                           ;	PORTB A/D Enable bit
  3821                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3822                           ;	Low-Power Timer1 Oscillator Enable bit
  3823                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3824                           ;	MCLR Pin Enable bit
  3825                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3826  300005                     	org	3145733
  3827  300005  83                 	db	131
  3828                           
  3829                           ;Config register CONFIG4L @ 0x300006
  3830                           ;	Stack Full/Underflow Reset Enable bit
  3831                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3832                           ;	Single-Supply ICSP Enable bit
  3833                           ;	LVP = OFF, Single-Supply ICSP disabled
  3834                           ;	Extended Instruction Set Enable bit
  3835                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3836                           ;	Background Debugger Enable bit
  3837                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3838  300006                     	org	3145734
  3839  300006  80                 	db	128
  3840                           
  3841                           ; Padding undefined space
  3842  300007                     	org	3145735
  3843  300007  FF                 	db	255
  3844                           
  3845                           ;Config register CONFIG5L @ 0x300008
  3846                           ;	Code Protection bit
  3847                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3848                           ;	Code Protection bit
  3849                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3850                           ;	Code Protection bit
  3851                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3852                           ;	Code Protection bit
  3853                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3854  300008                     	org	3145736
  3855  300008  0F                 	db	15
  3856                           
  3857                           ;Config register CONFIG5H @ 0x300009
  3858                           ;	Boot Block Code Protection bit
  3859                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3860                           ;	Data EEPROM Code Protection bit
  3861                           ;	CPD = OFF, Data EEPROM not code-protected
  3862  300009                     	org	3145737
  3863  300009  C0                 	db	192
  3864                           
  3865                           ;Config register CONFIG6L @ 0x30000A
  3866                           ;	Write Protection bit
  3867                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3868                           ;	Write Protection bit
  3869                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3870                           ;	Write Protection bit
  3871                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3872                           ;	Write Protection bit
  3873                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3874  30000A                     	org	3145738
  3875  30000A  0F                 	db	15
  3876                           
  3877                           ;Config register CONFIG6H @ 0x30000B
  3878                           ;	Configuration Register Write Protection bit
  3879                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3880                           ;	Boot Block Write Protection bit
  3881                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3882                           ;	Data EEPROM Write Protection bit
  3883                           ;	WRTD = OFF, Data EEPROM not write-protected
  3884  30000B                     	org	3145739
  3885  30000B  E0                 	db	224
  3886                           
  3887                           ;Config register CONFIG7L @ 0x30000C
  3888                           ;	Table Read Protection bit
  3889                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3890                           ;	Table Read Protection bit
  3891                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3892                           ;	Table Read Protection bit
  3893                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3894                           ;	Table Read Protection bit
  3895                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3896  30000C                     	org	3145740
  3897  30000C  0F                 	db	15
  3898                           
  3899                           ;Config register CONFIG7H @ 0x30000D
  3900                           ;	Boot Block Table Read Protection bit
  3901                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3902  30000D                     	org	3145741
  3903  30000D  40                 	db	64
  3904                           tosu	equ	0xFFF
  3905                           tosh	equ	0xFFE
  3906                           tosl	equ	0xFFD
  3907                           stkptr	equ	0xFFC
  3908                           pclatu	equ	0xFFB
  3909                           pclath	equ	0xFFA
  3910                           pcl	equ	0xFF9
  3911                           tblptru	equ	0xFF8
  3912                           tblptrh	equ	0xFF7
  3913                           tblptrl	equ	0xFF6
  3914                           tablat	equ	0xFF5
  3915                           prodh	equ	0xFF4
  3916                           prodl	equ	0xFF3
  3917                           indf0	equ	0xFEF
  3918                           postinc0	equ	0xFEE
  3919                           postdec0	equ	0xFED
  3920                           preinc0	equ	0xFEC
  3921                           plusw0	equ	0xFEB
  3922                           fsr0h	equ	0xFEA
  3923                           fsr0l	equ	0xFE9
  3924                           wreg	equ	0xFE8
  3925                           indf1	equ	0xFE7
  3926                           postinc1	equ	0xFE6
  3927                           postdec1	equ	0xFE5
  3928                           preinc1	equ	0xFE4
  3929                           plusw1	equ	0xFE3
  3930                           fsr1h	equ	0xFE2
  3931                           fsr1l	equ	0xFE1
  3932                           bsr	equ	0xFE0
  3933                           indf2	equ	0xFDF
  3934                           postinc2	equ	0xFDE
  3935                           postdec2	equ	0xFDD
  3936                           preinc2	equ	0xFDC
  3937                           plusw2	equ	0xFDB
  3938                           fsr2h	equ	0xFDA
  3939                           fsr2l	equ	0xFD9
  3940                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        161
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    109     121
    BANK0           128     79     121
    BANK1           256      0     119
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Tela1
    _ssdInit->_pinMode
    _lcdInit->_lcdCommand
    _Tela1->_Tela2
    _Tela2->_Tela3
    _Tela3->_pwmSet1
    _Tela3->_tempo
    _tempo->_ssdUpdate
    _ssdUpdate->_digitalWrite
    _pwmSet1->___lwdiv
    _lcdData->_digitalWrite
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us

Critical Paths under _main in BANK0

    _main->_Tela1

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0   42897
                                            107 COMRAM     2     2      0
                                             25 BANK0     54    54      0
                              _Tela1
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdData
                            _lcdInit
                           _ssdDigit
                            _ssdInit
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4243
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Tela1                                               28    28      0   30548
                                            105 COMRAM     2     2      0
                                              0 BANK0     25    25      0
                              _Tela2
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                            _lcdData
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _Tela2                                               35    35      0   21360
                                             70 COMRAM    35    35      0
                              _Tela3
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                            _lcdData
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     632
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (3) _Tela3                                               60    60      0   12034
                                             12 COMRAM    58    58      0
                         _lcdCommand
                            _lcdData
                            _pwmInit
                            _pwmSet1
                          _ssdUpdate
                              _tempo
 ---------------------------------------------------------------------------------
 (4) _tempo                                                5     5      0    2756
                                              7 COMRAM     5     5      0
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            1     1      0    2572
                                              6 COMRAM     1     1      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _pwmSet1                                              5     5      0     968
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     437
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     440
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcdData                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Tela1
     _Tela2
       _Tela3
         _lcdCommand
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
         _lcdData
           _Delay40us
           _digitalWrite
         _pwmInit
         _pwmSet1
           ___lwdiv
           ___wmul
         _ssdUpdate
           _digitalWrite
         _tempo
           _ssdUpdate
       _kpDebounce
       _kpRead
       _lcdCommand
       _lcdData
       _ssdDigit
       _ssdUpdate
     _kpDebounce
     _kpRead
     _lcdCommand
     _lcdData
     _ssdDigit
     _ssdUpdate
   _kpDebounce
   _kpInit
   _kpRead
   _lcdCommand
   _lcdData
   _lcdInit
     _Delay2ms
     _lcdCommand
     _pinMode
   _ssdDigit
   _ssdInit
     _pinMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      77       7       46.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     4F      79       5       94.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     6D      79       1       95.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     169      15        0.0%
DATA                 0      0     169       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jul 26 10:18:12 2021

                     l42 095C                       l76 07B6                       _v0 0077  
                     _v1 0076                       _v2 0075                       _v3 0074  
    ___wmul@multiplicand 0003                      l107 0B98                      l108 0BA6  
                    l824 12B4                      wreg 000FE8                     l2110 0696  
                   l2102 0644                     l2008 0B8C                     l2200 0DC6  
                   l2120 070C                     l2112 06B6                     l2104 0660  
                   l2212 0DE6                     l2300 0F8A                     l2062 0E5A  
                   l2046 0E28                     l2206 0DE2                     l2134 0798  
                   l2126 0742                     l2118 06EC                     l2072 0E68  
                   l2160 0D30                     l2128 0762                     l2320 0BDE  
                   l2146 0D10                     l2174 0D50                     l2342 0C22  
                   l2334 0C02                     l2088 0E9A                     l2280 0F2A  
                   l2360 0C6C                     l2194 0DAA                     l2266 0F06  
                   l2354 0C66                     l1820 0A14                     l1750 0840  
                   l1742 07EA                     l1830 0A6A                     l1814 09E6  
                   l2374 0C92                     l1760 08B2                     l1752 085C  
                   l1744 0806                     l1808 09B8                     l1850 1282  
                   l1826 0A42                     l1922 12C6                     l1852 128A  
                   l1836 0A70                     l1940 12D8                     l1782 13A8  
                   l1774 0942                     l1766 08EC                     l1758 0896  
                   l1862 12AA                     l1942 12DA                     l1934 12D2  
                   l1792 1396                     l1768 0908                     l1952 12EE  
                   l1928 12CC                     l1946 12E2                     l1980 0ADA  
                   l1972 0A98                     l1886 1166                     l1958 12FA  
                   l1990 0AF2                     l1994 0B3A                     l1996 0B6A  
                   u1100 086C                     u1020 07C8                     u2011 0C84  
                   u1204 0938                     u1140 08C2                     u1124 088C  
                   u1060 0816                     u1044 07E0                     u1205 0934  
                   u1125 0888                     u1045 07DC                     u1214 0952  
                   u1134 08A6                     u1054 07FA                     u1215 094E  
                   u1135 08A2                     u1055 07F6                     u1250 128E  
                   u1180 0918                     u1164 08E2                     u1084 0836  
                   u1165 08DE                     u1085 0832                     u1174 08FC  
                   u1094 0850                     u1414 0B2C                     u1175 08F8  
                   u1095 084C                     u1511 0DFE                     u1415 0B26  
                   u1280 1160                     u1424 0B56                     u1521 0E10  
                   u1425 0B50                     u1610 0670                     u1380 0AEE  
                   u1364 0AAC                     u1604 0654                     u1365 0AA8  
                   u1605 0650                     u1374 0AC8                     u1551 0E8E  
                   u1375 0AC4                     u1394 0B02                     u1730 0772  
                   u1714 0738                     u1650 06C6                     u1634 068C  
                   u1570 0622                     u1395 0AFE                     u1715 0734  
                   u1635 0688                     u1820 0D66                     u1724 0756  
                   u1644 06AA                     u1725 0752                     u1645 06A6  
                   u1830 0D86                     u1910 0F42                     u1920 0F64  
                   u1754 078E                     u1690 071C                     u1674 06E2  
                   u1594 063A                     u1771 0CDA                     u1755 078A  
                   u1675 06DE                     u1595 0636                     u1764 07AC  
                   u1684 0700                     u1781 0CEC                     u1765 07A8  
                   u1685 06FC                     u1791 0CFE                     u1951 0BBA  
                   u1881 0EE0                     u1891 0EF2                     u1980 0C40  
                   _main 0BB0                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___param_bank 000000  
             Tela1@tecla 0097               Tela3@logo1 000D               Tela2@tecla 0067  
                  ?_main 0001          __end_of___lwdiv 12BE                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdData 126C          __end_of_lcdInit 1020                    _Tela1 0ED6  
                  _Tela2 0CD0                    _Tela3 0DF0          __end_of_pinMode 07B8  
                  _valor 0072                    _tempo 12BE                    main@i 00CE  
                  tablat 000FF5          __end_of_ssdInit 1218          __end_of_pwmSet1 1104  
        __end_of_pwmInit 1392                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8         __end_of_Delay2ms 13A4     __end_of_digitalWrite 095E  
        __initialization 116C             __end_of_main 0CD0       __size_of_Delay40us 000E  
                 ??_main 006C            __activetblptr 000002                   ?_Tela1 0001  
                 ?_Tela2 0001                   ?_Tela3 0001                   ?_tempo 0001  
                 Tela1@i 0098                   Tela2@i 0069                   Tela3@i 0046  
                 ___wmul 1358                ??___lwdiv 0005                   _kpInit 13B2  
                 _kpRead 13BC                   clear_0 11B2                ??_lcdData 0007  
                 isa$std 000001                ??_lcdInit 0009         __end_of_ssdDigit 1358  
              ??_pinMode 0005             __mediumconst 0000                   tempo@i 000C  
                 tempo@j 000A                   tempo@k 000B                   tempo@l 0009  
                 tblptrh 000FF7                   tblptrl 000FF6                   tempo@v 0008  
                 tblptru 000FF8                ??_ssdInit 0007                ??_pwmSet1 0008  
              ??_pwmInit 0001        __end_of_Delay40us 13B2               __accesstop 0080  
__end_of__initialization 11B8            ___rparam_used 000001              pinMode@type 0003  
          __end_of_Tela1 0FA8            __end_of_Tela2 0DF0            __end_of_Tela3 0ED6  
         __pcstackCOMRAM 0001             __pidataBANK0 1304             __pidataBANK1 1020  
          __end_of_tempo 1304                ?_Delay2ms 0001                  ??_Tela1 006A  
                ??_Tela2 0047                  ??_Tela3 000D                  ??_tempo 0008  
  __size_of_digitalWrite 01A6               _lcdCommand 1104                  ?___wmul 0001  
                ?_kpInit 0001                  ?_kpRead 0001               _kpDebounce 0A8C  
     __size_of_ssdUpdate 012E               ??_Delay2ms 0002             _digitalWrite 07B8  
                __Hparam 0000                  __Lparam 0000                ?_ssdDigit 0001  
        kpDebounce@old_D 0006          kpDebounce@tempo 0079          __size_of___wmul 0026  
                ___lwdiv 126C             __psmallconst 0600          __size_of_kpInit 000A  
        __size_of_kpRead 000A              ssdDigit@val 0002              ssdDigit@pos 0001  
                __pcinit 116C                  _lcdData 1218                  __ramtop 0600  
                _lcdInit 0FA8                  __ptext0 0BB0                  __ptext1 11C2  
                __ptext2 0FA8                  __ptext3 0612                  __ptext4 13B2  
                __ptext5 0ED6                  __ptext6 0CD0                  __ptext7 132E  
                __ptext8 13BC                  __ptext9 0A8C                  _display 0078  
                _pinMode 0612                  _ssdInit 11C2                  _pwmSet1 1098  
                _pwmInit 137E                  main@F82 0120                  main@F76 0140  
                main@F78 00F6                Delay2ms@i 0002      kpDebounce@valorNovo 0070  
   end_of_initialization 11B8            __Lmediumconst 0000        __end_of_ssdUpdate 0A8C  
             ??_ssdDigit 0002                  postdec1 000FE5              ?_lcdCommand 0001  
                postinc0 000FEE              ?_kpDebounce 0001           _valor@ssd$F163 0601  
              _Delay40us 13A4                Tela1@msg1 008E                Tela1@msg2 0080  
              Tela2@msg1 0049                Tela2@msg2 0053                Tela2@msg3 005D  
              Tela3@msg1 003B                Tela3@msg2 002D                Tela2@time 0068  
         __end_of___wmul 137E           __end_of_kpInit 13BC           __end_of_kpRead 13C6  
 __end_of_valor@ssd$F163 0611      start_initialization 116C        __size_of_Delay2ms 0012  
    __size_of_lcdCommand 0068      __size_of_kpDebounce 0124               ?_Delay40us 0001  
               ??___wmul 0005                 ??_kpInit 0001                 ??_kpRead 0003  
            __pdataBANK0 00CF              __pdataBANK1 0100              __pbssCOMRAM 006E  
          __pcstackBANK0 0080               pinMode@pin 0001         ___lwdiv@dividend 0001  
      __size_of_ssdDigit 002A                 ?___lwdiv 0001                 ?_lcdData 0001  
               ?_lcdInit 0001            lcdCommand@cmd 0008              __smallconst 0600  
               ?_pinMode 0001           __size_of_Tela1 00D2           __size_of_Tela2 0120  
         __size_of_Tela3 00E6                 ?_ssdInit 0001                 ?_pwmSet1 0001  
               ?_pwmInit 0001         ___lwdiv@quotient 0005           __size_of_tempo 0046  
            ??_Delay40us 0001           ___wmul@product 0005             ??_lcdCommand 0007  
              _ssdUpdate 095E               pwmSet1@val 000B             ??_kpDebounce 0001  
      ___wmul@multiplier 0001          lcdCommand@old_D 0007    kpDebounce@valorAntigo 006E  
              main@logo1 0099                 _Delay2ms 1392                main@tecla 00CC  
               Tela1@F76 00ED                 Tela1@F78 015E                 Tela2@F80 00D9  
               Tela2@F82 00CF                 Tela2@F78 00E3                 Tela3@F92 016C  
               Tela3@F94 0150                 Tela3@F96 0100                copy_data0 1180  
              copy_data1 11A0       __end_of_lcdCommand 116C             lcdData@old_D 0008  
           lcdData@valor 0007       __end_of_kpDebounce 0BB0                 __Hrparam 0000  
               __Lrparam 0000               ?_ssdUpdate 0001         __size_of___lwdiv 0052  
        pwmSet1@porcento 000A         __size_of_lcdData 0054         __size_of_lcdInit 0078  
       __size_of_pinMode 01A6          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 0DF0                 __ptext11 12BE                 __ptext20 1392  
               __ptext12 095E                 __ptext21 13A4                 __ptext13 1098  
               __ptext14 1358                 __ptext15 126C                 __ptext16 137E  
               __ptext17 1218                 __ptext18 1104                 __ptext19 07B8  
       __size_of_ssdInit 0056         __size_of_pwmSet1 006C         __size_of_pwmInit 0014  
          __size_of_main 0120               Delay40us@i 0001                 _ssdDigit 132E  
               isa$xinst 000000                 main@msg1 00B9                 main@msg2 00C9  
               main@time 00CD            ?_digitalWrite 0001        digitalWrite@value 0003  
            ??_ssdUpdate 0007              kpDebounce@i 000A              kpDebounce@j 0009  
            kpDebounce@k 0007           ??_digitalWrite 0005          digitalWrite@pin 0001  
